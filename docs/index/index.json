{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/gettingstarted",
            "title" : "Getting Started",
            "type" : "symbol"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingthreads",
            "title" : "Managing Threads",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingmessages",
            "title" : "Managing Messages",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingcontacts",
            "title" : "Managing Contacts",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingfiles",
            "title" : "Managing Files",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingusers",
            "title" : "Managing Users",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingprofile",
            "title" : "Managing Profile",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingtags",
            "title" : "Managing Tags",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingbots",
            "title" : "Managing Bots",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingassistants",
            "title" : "Managing Assistants",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/managingmaps",
            "title" : "Managing Maps",
            "type" : "article"
          },
          {
            "title" : "Important classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/delegate",
                "title" : "var delegate: ChatDelegate?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/userinfo",
                "title" : "var userInfo: User?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/addbotcommand(_:completion:uniqueidresult:)",
                "title" : "func addBotCommand(AddBotCommandRequest, completion: CompletionType<BotInfo>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/addcontact(_:completion:uniqueidresult:)",
                "title" : "func addContact(AddContactRequest, completion: CompletionType<[Contact]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/addcontacts(_:completion:uniqueidsresult:)",
                "title" : "func addContacts([AddContactRequest], completion: CompletionType<[Contact]>, uniqueIdsResult: UniqueIdsResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/addparticipant(_:completion:uniqueidresult:)",
                "title" : "func addParticipant(AddParticipantRequest, completion: CompletionType<Conversation>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/addparticipants(_:completion:uniqueidresult:)",
                "title" : "func addParticipants([AddParticipantRequest], completion: CompletionType<Conversation>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/addtagparticipants(_:completion:uniqueidresult:)",
                "title" : "func addTagParticipants(AddTagParticipantsRequest, completion: CompletionType<[TagParticipant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/allunreadmessagecount(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func allUnreadMessageCount(UnreadMessageCountRequest, completion: CompletionType<Int>, cacheResponse: CacheResponseType<Int>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/blockassistants(_:_:uniqueidresult:)",
                "title" : "func blockAssistants(BlockUnblockAssistantRequest, CompletionType<[Assistant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/blockcontact(_:completion:uniqueidresult:)",
                "title" : "func blockContact(BlockRequest, completion: CompletionType<BlockedContact>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/cancelmessage(_:completion:)",
                "title" : "func cancelMessage(CancelMessageRequest, completion: CompletionType<Bool>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/changethreadtype(_:completion:uniqueidresult:)",
                "title" : "func changeThreadType(ChangeThreadTypeRequest, completion: CompletionType<Conversation>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/clearhistory(_:completion:uniqueidresult:)",
                "title" : "func clearHistory(ClearHistoryRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/closethread(_:completion:uniqueidresult:)",
                "title" : "func closeThread(CloseThreadRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/contactnotseen(_:completion:uniqueidresult:)",
                "title" : "func contactNotSeen(NotSeenDurationRequest, completion: CompletionType<[UserLastSeenDuration]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/createbot(_:completion:uniqueidresult:)",
                "title" : "func createBot(CreateBotRequest, completion: CompletionType<Bot>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/createchatobject(config:)",
                "title" : "func createChatObject(config: ChatConfig)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/createtag(_:completion:uniqueidresult:)",
                "title" : "func createTag(CreateTagRequest, completion: CompletionType<Tag>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/createthread(_:completion:uniqueidresult:)",
                "title" : "func createThread(CreateThreadRequest, completion: CompletionType<Conversation>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/createthreadwithfilemessage(_:textmessage:uploadfile:uploadprogress:onsent:onseen:ondeliver:createthreadcompletion:uploaduniqueidresult:messageuniqueidresult:)",
                "title" : "func createThreadWithFileMessage(CreateThreadRequest, textMessage: SendTextMessageRequest, uploadFile: UploadFileRequest, uploadProgress: UploadFileProgressType?, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType, createThreadCompletion: CompletionType<Conversation>?, uploadUniqueIdResult: UniqueIdResultType, messageUniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/createthreadwithmessage(_:uniqueidresult:onsent:ondelivery:onseen:completion:)",
                "title" : "func createThreadWithMessage(CreateThreadWithMessage, uniqueIdResult: UniqueIdResultType, onSent: OnSentType, onDelivery: OnDeliveryType, onSeen: OnSentType, completion: CompletionType<Conversation>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/deactiveassistant(_:completion:uniqueidresult:)",
                "title" : "func deactiveAssistant(DeactiveAssistantRequest, completion: CompletionType<[Assistant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/deletemessage(_:completion:uniqueidresult:)",
                "title" : "func deleteMessage(DeleteMessageRequest, completion: CompletionType<Message>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/deletemultiplemessages(_:completion:uniqueidresult:)",
                "title" : "func deleteMultipleMessages(BatchDeleteMessageRequest, completion: CompletionType<Message>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/deletetag(_:completion:uniqueidresult:)",
                "title" : "func deleteTag(DeleteTagRequest, completion: CompletionType<Tag>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/deletethread(_:completion:uniqueidresult:)",
                "title" : "func deleteThread(DeleteThreadRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/dispose()",
                "title" : "func dispose()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/editmessage(_:completion:uniqueidresult:)",
                "title" : "func editMessage(EditMessageRequest, completion: CompletionType<Message>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/edittag(_:completion:uniqueidresult:)",
                "title" : "func editTag(EditTagRequest, completion: CompletionType<Tag>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/exportchat(_:localidentifire:_:uniqueidresult:)",
                "title" : "func exportChat(GetHistoryRequest, localIdentifire: String, CompletionType<URL>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/forwardmessages(_:onsent:onseen:ondeliver:uniqueidsresult:)",
                "title" : "func forwardMessages(ForwardMessageRequest, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType, uniqueIdsResult: UniqueIdsResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getallthreads(request:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getAllThreads(request: AllThreads, completion: CompletionType<[Conversation]>, cacheResponse: CacheResponseType<[Conversation]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getassistats(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getAssistats(AssistantsRequest, completion: PaginationCompletionType<[Assistant]>, cacheResponse: PaginationCompletionType<[Assistant]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getassistatshistory(_:uniqueidresult:)",
                "title" : "func getAssistatsHistory(CompletionType<[AssistantAction]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getblockedassistants(_:_:cacheresponse:uniqueidresult:)",
                "title" : "func getBlockedAssistants(BlockedAssistantsRequest, PaginationCompletionType<[Assistant]>, cacheResponse: PaginationCacheResponseType<[Assistant]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getblockedcontacts(_:completion:uniqueidresult:)",
                "title" : "func getBlockedContacts(BlockedListRequest, completion: PaginationCompletionType<[BlockedContact]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getcontacts(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getContacts(ContactsRequest, completion: PaginationCompletionType<[Contact]>, cacheResponse: PaginationCacheResponseType<[Contact]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getcurrentuserroles(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getCurrentUserRoles(CurrentUserRolesRequest, completion: CompletionType<[Roles]>, cacheResponse: CacheResponseType<[Roles]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getfile(req:downloadprogress:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getFile(req: FileRequest, downloadProgress: DownloadProgressType, completion: DownloadFileCompletionType, cacheResponse: DownloadFileCompletionType, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/gethashtaglist(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getHashtagList(GetHistoryRequest, completion: PaginationCompletionType<[Message]>, cacheResponse: CacheResponseType<[Message]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/gethistory(_:completion:cacheresponse:textmessagenotsentrequests:editmessagenotsentrequests:forwardmessagenotsentrequests:filemessagenotsentrequests:uploadfilenotsentrequests:uploadimagenotsentrequests:uniqueidresult:)",
                "title" : "func getHistory(GetHistoryRequest, completion: PaginationCompletionType<[Message]>, cacheResponse: CacheResponseType<[Message]>?, textMessageNotSentRequests: CompletionType<[SendTextMessageRequest]>?, editMessageNotSentRequests: CompletionType<[EditMessageRequest]>?, forwardMessageNotSentRequests: CompletionType<[ForwardMessageRequest]>?, fileMessageNotSentRequests: CompletionType<[(UploadFileRequest, SendTextMessageRequest)]>?, uploadFileNotSentRequests: CompletionType<[UploadFileRequest]>?, uploadImageNotSentRequests: CompletionType<[UploadImageRequest]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getimage(req:downloadprogress:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getImage(req: ImageRequest, downloadProgress: DownloadProgressType, completion: DownloadImageCompletionType, cacheResponse: DownloadImageCompletionType, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getmentions(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getMentions(MentionRequest, completion: PaginationCompletionType<[Message]>, cacheResponse: PaginationCacheResponseType<[Message]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getthreadadmins(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getThreadAdmins(ThreadParticipantsRequest, completion: PaginationCompletionType<[Participant]>, cacheResponse: PaginationCacheResponseType<[Participant]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getthreadparticipants(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getThreadParticipants(ThreadParticipantsRequest, completion: PaginationCompletionType<[Participant]>, cacheResponse: PaginationCacheResponseType<[Participant]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getthreads(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getThreads(ThreadsRequest, completion: PaginationCompletionType<[Conversation]>, cacheResponse: PaginationCacheResponseType<[Conversation]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getuserbots(_:completion:uniqueidresult:)",
                "title" : "func getUserBots(GetUserBotsRequest, completion: CompletionType<[BotInfo]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/getuserinfo(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func getUserInfo(UserInfoRequest, completion: CompletionType<User>, cacheResponse: CacheResponseType<User>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/isthreadnamepublic(_:completion:uniqueidresult:)",
                "title" : "func isThreadNamePublic(IsThreadNamePublicRequest, completion: CompletionType<String>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/jointhread(_:completion:uniqueidresult:)",
                "title" : "func joinThread(JoinPublicThreadRequest, completion: CompletionType<Conversation>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/leavethread(_:completion:uniqueidresult:)",
                "title" : "func leaveThread(LeaveThreadRequest, completion: CompletionType<User>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/leavethreadsaftly(_:completion:newadmincompletion:uniqueidresult:)",
                "title" : "func leaveThreadSaftly(SafeLeaveThreadRequest, completion: CompletionType<User>, newAdminCompletion: CompletionType<[UserRole]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/logout()",
                "title" : "func logOut()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/managedownload(uniqueid:action:isimage:completion:)",
                "title" : "func manageDownload(uniqueId: String, action: DownloaUploadAction, isImage: Bool, completion: ((String, Bool) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/manageupload(uniqueid:action:isimage:completion:)",
                "title" : "func manageUpload(uniqueId: String, action: DownloaUploadAction, isImage: Bool, completion: ((String, Bool) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/mapreverse(_:completion:uniqueidresult:)",
                "title" : "func mapReverse(MapReverseRequest, completion: CompletionType<MapReverse>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/maprouting(_:completion:uniqueidresult:)",
                "title" : "func mapRouting(MapRoutingRequest, completion: CompletionType<[Route]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/mapsearch(_:completion:uniqueidresult:)",
                "title" : "func mapSearch(MapSearchRequest, completion: CompletionType<[MapItem]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/mapstaticimage(_:completion:uniqueidresult:)",
                "title" : "func mapStaticImage(MapStaticImageRequest, completion: CompletionType<Data>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/messagedeliveryparticipants(_:completion:uniqueidresult:)",
                "title" : "func messageDeliveryParticipants(MessageDeliveredUsersRequest, completion: PaginationCacheResponseType<[Participant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/messageseenbyusers(_:completion:uniqueidresult:)",
                "title" : "func messageSeenByUsers(MessageSeenByUsersRequest, completion: PaginationCacheResponseType<[Participant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/mutethread(_:completion:uniqueidresult:)",
                "title" : "func muteThread(MuteUnmuteThreadRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/mutualgroups(_:_:cacheresponse:uniqueidresult:)",
                "title" : "func mutualGroups(MutualGroupsRequest, PaginationCompletionType<[Conversation]>, cacheResponse: PaginationCacheResponseType<[Conversation]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/pinmessage(_:completion:uniqueidresult:)",
                "title" : "func pinMessage(PinUnpinMessageRequest, completion: CompletionType<PinUnpinMessage>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/pinthread(_:completion:uniqueidresult:)",
                "title" : "func pinThread(PinUnpinThreadRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/registerassistat(_:completion:uniqueidresult:)",
                "title" : "func registerAssistat(RegisterAssistantRequest, completion: CompletionType<[Assistant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/removeauditor(_:_:uniqueidresult:)",
                "title" : "func removeAuditor(AuditorRequest, CompletionType<[UserRole]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/removebotcommand(_:completion:uniqueidresult:)",
                "title" : "func removeBotCommand(RemoveBotCommandRequest, completion: CompletionType<BotInfo>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/removecontact(_:completion:uniqueidresult:)",
                "title" : "func removeContact(RemoveContactsRequest, completion: CompletionType<Bool>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/removeparticipants(_:completion:uniqueidresult:)",
                "title" : "func removeParticipants(RemoveParticipantsRequest, completion: CompletionType<[Participant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/removeroles(_:_:uniqueidresult:)",
                "title" : "func removeRoles(RolesRequest, CompletionType<[UserRole]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/removetagparticipants(_:completion:uniqueidresult:)",
                "title" : "func removeTagParticipants(RemoveTagParticipantsRequest, completion: CompletionType<[TagParticipant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/replyfilemessage(replymessage:uploadfile:uploadprogress:onsent:onseen:ondeliver:uploaduniqueidresult:messageuniqueidresult:)",
                "title" : "func replyFileMessage(replyMessage: ReplyMessageRequest, uploadFile: UploadFileRequest, uploadProgress: UploadFileProgressType?, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType, uploadUniqueIdResult: UniqueIdResultType, messageUniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/replymessage(_:uniqueidresult:onsent:onseen:ondeliver:)",
                "title" : "func replyMessage(ReplyMessageRequest, uniqueIdresult: UniqueIdResultType, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/searchcontacts(_:completion:cacheresponse:uniqueidresult:)",
                "title" : "func searchContacts(ContactsRequest, completion: PaginationCompletionType<[Contact]>, cacheResponse: PaginationCacheResponseType<[Contact]>?, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/seen(_:uniqueidresult:)",
                "title" : "func seen(MessageSeenRequest, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sendfilemessage(textmessage:uploadfile:uploadprogress:onsent:onseen:ondeliver:uploaduniqueidresult:messageuniqueidresult:)",
                "title" : "func sendFileMessage(textMessage: SendTextMessageRequest, uploadFile: UploadFileRequest, uploadProgress: UploadFileProgressType?, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType, uploadUniqueIdResult: UniqueIdResultType, messageUniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sendlocationmessage(_:uploadprogress:downloadprogress:onsent:onseen:ondeliver:uploaduniqueidresult:messageuniqueidresult:)",
                "title" : "func sendLocationMessage(LocationMessageRequest, uploadProgress: UploadFileProgressType?, downloadProgress: DownloadProgressType?, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType, uploadUniqueIdResult: UniqueIdResultType, messageUniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sendsignalmessage(req:)",
                "title" : "func sendSignalMessage(req: SendSignalMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sendstatusping(_:)",
                "title" : "func sendStatusPing(SendStatusPingRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sendstoptyping()",
                "title" : "func sendStopTyping()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sendtextmessage(_:uniqueidresult:onsent:onseen:ondeliver:)",
                "title" : "func sendTextMessage(SendTextMessageRequest, uniqueIdresult: UniqueIdResultType, onSent: OnSentType, onSeen: OnSeenType, onDeliver: OnDeliveryType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/setauditor(_:_:uniqueidresult:)",
                "title" : "func setAuditor(AuditorRequest, CompletionType<[UserRole]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/setprofile(_:completion:uniqueidresult:)",
                "title" : "func setProfile(UpdateChatProfile, completion: CompletionType<Profile>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/setroles(_:_:uniqueidresult:)",
                "title" : "func setRoles(RolesRequest, CompletionType<[UserRole]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/settoken(newtoken:recreateobject:)",
                "title" : "func setToken(newToken: String, reCreateObject: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/snedstarttyping(threadid:)",
                "title" : "func snedStartTyping(threadId: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/spampvthread(_:completion:uniqueidresult:)",
                "title" : "func spamPvThread(SpamThreadRequest, completion: CompletionType<BlockedContact>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/startbot(_:completion:uniqueidresult:)",
                "title" : "func startBot(StartStopBotRequest, completion: CompletionType<String>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/stopbot(_:completion:uniqueidresult:)",
                "title" : "func stopBot(StartStopBotRequest, completion: CompletionType<String>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/synccontacts(completion:uniqueidsresult:)",
                "title" : "func syncContacts(completion: CompletionType<[Contact]>, uniqueIdsResult: UniqueIdsResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/taglist(_:completion:uniqueidresult:)",
                "title" : "func tagList(String?, completion: CompletionType<[Tag]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/unblockcontact(_:completion:uniqueidresult:)",
                "title" : "func unBlockContact(UnBlockRequest, completion: CompletionType<BlockedContact>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/unblockassistants(_:_:uniqueidresult:)",
                "title" : "func unblockAssistants(BlockUnblockAssistantRequest, CompletionType<[Assistant]>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/unmutethread(_:completion:uniqueidresult:)",
                "title" : "func unmuteThread(MuteUnmuteThreadRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/unpinmessage(_:completion:uniqueidresult:)",
                "title" : "func unpinMessage(PinUnpinMessageRequest, completion: CompletionType<PinUnpinMessage>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/unpinthread(_:completion:uniqueidresult:)",
                "title" : "func unpinThread(PinUnpinThreadRequest, completion: CompletionType<Int>, uniqueIdResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/updatecontact(_:completion:uniqueidsresult:)",
                "title" : "func updateContact(UpdateContactRequest, completion: CompletionType<[Contact]>, uniqueIdsResult: UniqueIdResultType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/updatethreadinfo(_:uniqueidresult:uploadprogress:completion:)",
                "title" : "func updateThreadInfo(UpdateThreadInfoRequest, uniqueIdResult: UniqueIdResultType, uploadProgress: UploadFileProgressType, completion: CompletionType<Conversation>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/uploadfile(req:uploaduniqueidresult:uploadprogress:uploadcompletion:)",
                "title" : "func uploadFile(req: UploadFileRequest, uploadUniqueIdResult: UniqueIdResultType, uploadProgress: UploadFileProgressType?, uploadCompletion: UploadCompletionType?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/uploadimage(req:uploaduniqueidresult:uploadprogress:uploadcompletion:)",
                "title" : "func uploadImage(req: UploadImageRequest, uploadUniqueIdResult: UniqueIdResultType, uploadProgress: UploadFileProgressType?, uploadCompletion: UploadCompletionType?)",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chat\/sharedinstance",
                "title" : "class var sharedInstance: Chat",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chat",
            "title" : "Chat",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatdelegate\/chaterror(error:)",
                "title" : "func chatError(error: ChatError)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatdelegate\/chatevent(event:)",
                "title" : "func chatEvent(event: ChatEventType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatdelegate\/chatstate(state:currentuser:error:)",
                "title" : "func chatState(state: ChatState, currentUser: User?, error: ChatError?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chatdelegate",
            "title" : "ChatDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/get(usecache:cachetype:completion:)",
                "title" : "class func get(useCache: Bool, cacheType: ReadCacheType, completion: ((ChatResponse) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/write(cachetype:)",
                "title" : "class func write(cacheType: WriteCacheType)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/all_threads",
                    "title" : "case ALL_THREADS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/all_unread_count",
                    "title" : "case ALL_UNREAD_COUNT",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/cureent_user_roles(_:)",
                    "title" : "case CUREENT_USER_ROLES(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/edit_message_requests(_:)",
                    "title" : "case EDIT_MESSAGE_REQUESTS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/file_message_requests(_:)",
                    "title" : "case FILE_MESSAGE_REQUESTS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/forward_message_requests(_:)",
                    "title" : "case FORWARD_MESSAGE_REQUESTS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_assistants(_:_:)",
                    "title" : "case GET_ASSISTANTS(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_blocked_assistants(_:_:)",
                    "title" : "case GET_BLOCKED_ASSISTANTS(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_blocked_users",
                    "title" : "case GET_BLOCKED_USERS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_cashed_contacts(_:)",
                    "title" : "case GET_CASHED_CONTACTS(ContactsRequest?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_history(_:)",
                    "title" : "case GET_HISTORY(GetHistoryRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_mutual_groups(_:)",
                    "title" : "case GET_MUTUAL_GROUPS(MutualGroupsRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_text_not_sent_requests(_:)",
                    "title" : "case GET_TEXT_NOT_SENT_REQUESTS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_threads(_:)",
                    "title" : "case GET_THREADS(ThreadsRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/get_thread_participants(_:)",
                    "title" : "case GET_THREAD_PARTICIPANTS(ThreadParticipantsRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/mentions",
                    "title" : "case MENTIONS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/new_threads(_:_:)",
                    "title" : "case NEW_THREADS(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/phone_contacts",
                    "title" : "case PHONE_CONTACTS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/pin_threads",
                    "title" : "case PIN_THREADS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/tags",
                    "title" : "case TAGS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/thread_admins(_:)",
                    "title" : "case THREAD_ADMINS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/thread_participants(_:_:_:_:)",
                    "title" : "case THREAD_PARTICIPANTS(Int, Int, Int, Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/upload_file_requests(_:)",
                    "title" : "case UPLOAD_FILE_REQUESTS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/upload_image_requests(_:)",
                    "title" : "case UPLOAD_IMAGE_REQUESTS(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype\/user_info",
                    "title" : "case USER_INFO",
                    "type" : "case"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/readcachetype",
                "title" : "CacheFactory.ReadCacheType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/cashe_contacts(_:)",
                    "title" : "case CASHE_CONTACTS([Contact])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/clear_all_history(_:)",
                    "title" : "case CLEAR_ALL_HISTORY(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/current_user_roles(_:_:)",
                    "title" : "case CURRENT_USER_ROLES([Roles], Int?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_all_cache_data",
                    "title" : "case DELETE_ALL_CACHE_DATA",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_all_contacts",
                    "title" : "case DELETE_ALL_CONTACTS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_all_message",
                    "title" : "case DELETE_ALL_MESSAGE",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_all_threads",
                    "title" : "case DELETE_ALL_THREADS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_all_user",
                    "title" : "case DELETE_ALL_USER",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_assistants(_:)",
                    "title" : "case DELETE_ASSISTANTS([Assistant])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_contacts(_:)",
                    "title" : "case DELETE_CONTACTS([Int])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_edit_message_queue(_:)",
                    "title" : "case DELETE_EDIT_MESSAGE_QUEUE(Message)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_edit_text_message(_:)",
                    "title" : "case DELETE_EDIT_TEXT_MESSAGE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_file_message_queue(_:)",
                    "title" : "case DELETE_FILE_MESSAGE_QUEUE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_forward_message(_:)",
                    "title" : "case DELETE_FORWARD_MESSAGE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_forward_message_queue(_:)",
                    "title" : "case DELETE_FORWARD_MESSAGE_QUEUE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_message(_:messageid:)",
                    "title" : "case DELETE_MESSAGE(Int, messageId: Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_messages(_:messageids:)",
                    "title" : "case DELETE_MESSAGES(Int, messageIds: [Int])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_send_txet_message_queue(_:)",
                    "title" : "case DELETE_SEND_TXET_MESSAGE_QUEUE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_tag(_:)",
                    "title" : "case DELETE_TAG(Tag)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_tag_participants(_:)",
                    "title" : "case DELETE_TAG_PARTICIPANTS([TagParticipant])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_threads(_:)",
                    "title" : "case DELETE_THREADS([Int])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_upload_file_queue(_:)",
                    "title" : "case DELETE_UPLOAD_FILE_QUEUE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_upload_image_queue(_:)",
                    "title" : "case DELETE_UPLOAD_IMAGE_QUEUE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_wait_file_message(_:)",
                    "title" : "case DELETE_WAIT_FILE_MESSAGE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/delete_wait_text_message(_:)",
                    "title" : "case DELETE_WAIT_TEXT_MESSAGE(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/edit_message_queue(_:)",
                    "title" : "case EDIT_MESSAGE_QUEUE(EditMessageRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/forward_message_queue(_:)",
                    "title" : "case FORWARD_MESSAGE_QUEUE(ForwardMessageRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/get_blocked_users",
                    "title" : "case GET_BLOCKED_USERS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/insert_or_update_assistants(_:)",
                    "title" : "case INSERT_OR_UPDATE_ASSISTANTS([Assistant])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/leave_thread(_:)",
                    "title" : "case LEAVE_THREAD(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/message(_:)",
                    "title" : "case MESSAGE(Message)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/mute_unmute_thread(_:)",
                    "title" : "case MUTE_UNMUTE_THREAD(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/mutual_groups(_:_:)",
                    "title" : "case MUTUAL_GROUPS([Conversation], MutualGroupsRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/participants(_:_:)",
                    "title" : "case PARTICIPANTS([Participant]?, Int?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/pin_message(_:_:)",
                    "title" : "case PIN_MESSAGE(PinUnpinMessage, Int?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/pin_unpin_thread(_:)",
                    "title" : "case PIN_UNPIN_THREAD(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/remove_participants(participants:threadid:)",
                    "title" : "case REMOVE_PARTICIPANTS(participants: [Participant]?, threadId: Int?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/send_file_message_queue(_:_:)",
                    "title" : "case SEND_FILE_MESSAGE_QUEUE(UploadFileRequest, SendTextMessageRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/send_txet_message_queue(_:)",
                    "title" : "case SEND_TXET_MESSAGE_QUEUE(SendTextMessageRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/set_thread_unread_count(_:_:)",
                    "title" : "case SET_THREAD_UNREAD_COUNT(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/synced_contacts",
                    "title" : "case SYNCED_CONTACTS",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/tags(_:)",
                    "title" : "case TAGS([Tag])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/tag_participants(_:_:)",
                    "title" : "case TAG_PARTICIPANTS([TagParticipant], Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/threads(_:)",
                    "title" : "case THREADS([Conversation])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/unpin_message(_:_:)",
                    "title" : "case UNPIN_MESSAGE(PinUnpinMessage, Int?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/upload_file_queue(_:)",
                    "title" : "case UPLOAD_FILE_QUEUE(UploadFileRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/upload_image_queue(_:)",
                    "title" : "case UPLOAD_IMAGE_QUEUE(UploadImageRequest)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype\/user_info(_:)",
                    "title" : "case USER_INFO(User)",
                    "type" : "case"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/cachefactory\/writecachetype",
                "title" : "CacheFactory.WriteCacheType",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cachefactory",
            "title" : "CacheFactory",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/==(_:_:)",
                "title" : "static func == (Conversation, Conversation) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/init(admin:caneditinfo:canspam:closedthread:description:group:id:image:joindate:lastmessage:lastparticipantimage:lastparticipantname:lastseenmessageid:lastseenmessagenanos:lastseenmessagetime:mentioned:metadata:mute:participantcount:partner-5zpyo",
                "title" : "init(admin: Bool?, canEditInfo: Bool?, canSpam: Bool?, closedThread: Bool?, description: String?, group: Bool?, id: Int?, image: String?, joinDate: Int?, lastMessage: String?, lastParticipantImage: String?, lastParticipantName: String?, lastSeenMessageId: Int?, lastSeenMessageNanos: UInt?, lastSeenMessageTime: UInt?, mentioned: Bool?, metadata: String?, mute: Bool?, participantCount: Int?, partner: Int?, partnerLastDeliveredMessageId: Int?, partnerLastDeliveredMessageNanos: UInt?, partnerLastDeliveredMessageTime: UInt?, partnerLastSeenMessageId: Int?, partnerLastSeenMessageNanos: UInt?, partnerLastSeenMessageTime: UInt?, pin: Bool?, time: UInt?, title: String?, type: ThreadTypes?, unreadCount: Int?, uniqueName: String?, userGroupHash: String?, inviter: Participant?, lastMessageVO: Message?, participants: [Participant]?, pinMessage: PinUnpinMessage?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/init(theconversation:)",
                "title" : "init(theConversation: Conversation)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/admin",
                "title" : "var admin: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/caneditinfo",
                "title" : "var canEditInfo: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/canspam",
                "title" : "var canSpam: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/closedthread",
                "title" : "var closedThread: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/description",
                "title" : "var description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/group",
                "title" : "var group: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/inviter",
                "title" : "var inviter: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/joindate",
                "title" : "var joinDate: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastmessage",
                "title" : "var lastMessage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastmessagevo",
                "title" : "var lastMessageVO: Message?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastparticipantimage",
                "title" : "var lastParticipantImage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastparticipantname",
                "title" : "var lastParticipantName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastseenmessageid",
                "title" : "var lastSeenMessageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastseenmessagenanos",
                "title" : "var lastSeenMessageNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/lastseenmessagetime",
                "title" : "var lastSeenMessageTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/mentioned",
                "title" : "var mentioned: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/mute",
                "title" : "var mute: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/participantcount",
                "title" : "var participantCount: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/participants",
                "title" : "var participants: [Participant]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partner",
                "title" : "var partner: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partnerlastdeliveredmessageid",
                "title" : "var partnerLastDeliveredMessageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partnerlastdeliveredmessagenanos",
                "title" : "var partnerLastDeliveredMessageNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partnerlastdeliveredmessagetime",
                "title" : "var partnerLastDeliveredMessageTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partnerlastseenmessageid",
                "title" : "var partnerLastSeenMessageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partnerlastseenmessagenanos",
                "title" : "var partnerLastSeenMessageNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/partnerlastseenmessagetime",
                "title" : "var partnerLastSeenMessageTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/pin",
                "title" : "var pin: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/pinmessage",
                "title" : "var pinMessage: PinUnpinMessage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/time",
                "title" : "var time: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/title",
                "title" : "var title: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/type",
                "title" : "var type: ThreadTypes?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/uniquename",
                "title" : "var uniqueName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/unreadcount",
                "title" : "var unreadCount: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/usergrouphash",
                "title" : "var userGroupHash: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/conversation\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/conversation\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/conversation\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/conversation\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/conversation",
            "title" : "Conversation",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/==(_:_:)",
                "title" : "static func == (Message, Message) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/init(threadid:deletable:delivered:editable:edited:id:mentioned:message:messagetype:metadata:ownerid:pinned:previousid:seen:systemmetadata:time:timenanos:uniqueid:conversation:forwardinfo:participant:replyinfo:)",
                "title" : "init(threadId: Int?, deletable: Bool?, delivered: Bool?, editable: Bool?, edited: Bool?, id: Int?, mentioned: Bool?, message: String?, messageType: Int?, metadata: String?, ownerId: Int?, pinned: Bool?, previousId: Int?, seen: Bool?, systemMetadata: String?, time: UInt?, timeNanos: UInt?, uniqueId: String?, conversation: Conversation?, forwardInfo: ForwardInfo?, participant: Participant?, replyInfo: ReplyInfo?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/conversation",
                "title" : "var conversation: Conversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/deletable",
                "title" : "var deletable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/delivered",
                "title" : "var delivered: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/editable",
                "title" : "var editable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/edited",
                "title" : "var edited: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/forwardinfo",
                "title" : "var forwardInfo: ForwardInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/mentioned",
                "title" : "var mentioned: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/message",
                "title" : "var message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/messagetype",
                "title" : "var messageType: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/metadata-7zh4d",
                "title" : "var metaData: FileMetaData?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/metadata-98jct",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/ownerid",
                "title" : "var ownerId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/participant",
                "title" : "var participant: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/pinned",
                "title" : "var pinned: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/previousid",
                "title" : "var previousId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/replyinfo",
                "title" : "var replyInfo: ReplyInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/seen",
                "title" : "var seen: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/systemmetadata",
                "title" : "var systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/threadid",
                "title" : "var threadId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/time",
                "title" : "var time: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/timenanos",
                "title" : "var timeNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/message\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/message\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/message\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/message\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/message\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/message\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/message",
            "title" : "Message",
            "type" : "class"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addbotcommandrequest\/init(botname:commandlist:uniqueid:)",
                "title" : "init(botName: String, commandList: [String], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addbotcommandrequest\/botname",
                "title" : "let botName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addbotcommandrequest\/commandlist",
                "title" : "var commandList: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addbotcommandrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/addbotcommandrequest",
            "title" : "AddBotCommandRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/init(cellphonenumber:email:firstname:lastname:ownerid:uniqueid:)",
                "title" : "init(cellphoneNumber: String?, email: String?, firstName: String?, lastName: String?, ownerId: Int?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/init(email:firstname:lastname:ownerid:username:uniqueid:)",
                "title" : "init(email: String?, firstName: String?, lastName: String?, ownerId: Int?, username: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/ownerid",
                "title" : "var ownerId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/addcontactrequest",
            "title" : "AddContactRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/init(contactids:threadid:uniqueid:)",
                "title" : "init(contactIds: [Int], threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/init(coreuserid:threadid:uniqueid:)",
                "title" : "init(coreUserId: Int, threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/init(username:threadid:uniqueid:)",
                "title" : "init(userName: String, threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/contactids",
                "title" : "var contactIds: [Int]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/id",
                "title" : "var id: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/idtype",
                "title" : "var idType: InviteeTypes?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/threadid",
                "title" : "var threadId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/addparticipantrequest",
            "title" : "AddParticipantRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addtagparticipantsrequest\/init(tagid:threadids:uniqueid:)",
                "title" : "init(tagId: Int, threadIds: [Int], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addtagparticipantsrequest\/tagid",
                "title" : "var tagId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/addtagparticipantsrequest\/threadids",
                "title" : "var threadIds: [Int]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/addtagparticipantsrequest",
            "title" : "AddTagParticipantsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/allthreads\/init(summary:uniqueid:)",
                "title" : "init(summary: Bool, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/allthreads\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/allthreads",
            "title" : "AllThreads",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/init(assistant:contacttype:participant:block:roletypes:)",
                "title" : "init(assistant: Invitee?, contactType: String?, participant: Participant?, block: Bool, roleTypes: [Roles]?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/assistant",
                "title" : "var assistant: Invitee?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/block",
                "title" : "var block: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/contacttype",
                "title" : "var contactType: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/participant",
                "title" : "var participant: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/roletypes",
                "title" : "var roleTypes: [Roles]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/assistant\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/assistant\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/assistant\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/assistant",
            "title" : "Assistant",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantaction\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantaction\/actionname",
                "title" : "var actionName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantaction\/actiontime",
                "title" : "var actionTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantaction\/actiontype",
                "title" : "var actionType: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantaction\/participant",
                "title" : "var participant: Participant?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/assistantaction",
            "title" : "AssistantAction",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/assistantshistoryresponsehandler",
            "title" : "AssistantsHistoryResponseHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantsrequest\/init(contacttype:count:offset:uniqueid:)",
                "title" : "init(contactType: String, count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantsrequest\/contacttype",
                "title" : "let contactType: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantsrequest\/count",
                "title" : "let count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantsrequest\/offset",
                "title" : "let offset: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistantsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/assistantsrequest",
            "title" : "AssistantsRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/assistantsresponsehandler",
            "title" : "AssistantsResponseHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/auditorrequest\/init(userrolerequest:threadid:uniqueid:)",
                "title" : "init(userRoleRequest: UserRoleRequest, threadId: Int, uniqueId: String?)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/auditorrequest",
            "title" : "AuditorRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/banerror\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/banerror",
            "title" : "BanError",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/baserequest\/init(uniqueid:)",
                "title" : "init(uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/baserequest\/isautogenrateduniqueid",
                "title" : "var isAutoGenratedUniqueId: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/baserequest\/uniqueid",
                "title" : "var uniqueId: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/baserequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/baserequest\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/baserequest\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/baserequest\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/baserequest",
            "title" : "BaseRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/batchdeletemessagerequest\/init(threadid:messageids:deleteforall:uniqueids:uniqueid:)",
                "title" : "init(threadId: Int, messageIds: [Int], deleteForAll: Bool, uniqueIds: [String]?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/batchdeletemessagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/batchdeletemessagerequest",
            "title" : "BatchDeleteMessageRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/blockassistantrequesthandler",
            "title" : "BlockAssistantRequestHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockrequest\/init(contactid:threadid:userid:uniqueid:)",
                "title" : "init(contactId: Int?, threadId: Int?, userId: Int?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockrequest\/contactid",
                "title" : "let contactId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockrequest\/threadid",
                "title" : "let threadId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockrequest\/userid",
                "title" : "let userId: Int?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/blockrequest",
            "title" : "BlockRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockunblockassistantrequest\/init(assistants:uniqueid:)",
                "title" : "init(assistants: [Assistant], uniqueId: String?)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/blockunblockassistantrequest",
            "title" : "BlockUnblockAssistantRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/blockunblockassistantsresponsehandler",
            "title" : "BlockUnblockAssistantsResponseHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedassistantsrequest\/init(count:offset:uniqueid:)",
                "title" : "init(count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedassistantsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/blockedassistantsrequest",
            "title" : "BlockedAssistantsRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/blockedassistantsrequesthandler",
            "title" : "BlockedAssistantsRequestHandler",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/blockedassistantsresponsehandler",
            "title" : "BlockedAssistantsResponseHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/init(id:coreuserid:firstname:lastname:nickname:profileimage:contact:)",
                "title" : "init(id: Int?, coreUserId: Int?, firstName: String?, lastName: String?, nickName: String?, profileImage: String?, contact: Contact?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/contact",
                "title" : "var contact: Contact?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/coreuserid",
                "title" : "var coreUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/nickname",
                "title" : "var nickName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedcontact\/profileimage",
                "title" : "var profileImage: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/blockedcontact",
            "title" : "BlockedContact",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedlistrequest\/init(count:offset:uniqueid:)",
                "title" : "init(count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedlistrequest\/count",
                "title" : "let count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedlistrequest\/offset",
                "title" : "let offset: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/blockedlistrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/blockedlistrequest",
            "title" : "BlockedListRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/bot\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/bot\/apitoken",
                "title" : "var apiToken: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/bot\/thing",
                "title" : "var thing: Thing?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/bot\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/bot\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/bot\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/bot\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/bot",
            "title" : "Bot",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/botinfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/botinfo\/botuserid",
                "title" : "var botUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/botinfo\/commandlist",
                "title" : "var commandList: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/botinfo\/name",
                "title" : "var name: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/botinfo",
            "title" : "BotInfo",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/assistant",
                "title" : "var assistant: NSData?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/block",
                "title" : "var block: NSNumber",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/contacttype",
                "title" : "var contactType: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/inviteeid",
                "title" : "var inviteeId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/participant",
                "title" : "var participant: CMParticipant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/roles",
                "title" : "var roles: [String]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/getcodable()",
                "title" : "func getCodable() -> Assistant?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/crud",
                "title" : "static let crud: CoreDataCrud<CMAssistant>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/converttocm(assistant:entity:)",
                "title" : "class func convertToCM(assistant: Assistant, entity: CMAssistant?) -> CMAssistant",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmassistant\/insertorupdate(assistants:resultentity:)",
                "title" : "class func insertOrUpdate(assistants: [Assistant], resultEntity: ((CMAssistant) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmassistant",
            "title" : "CMAssistant",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/blocked",
                "title" : "var blocked: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/hasuser",
                "title" : "var hasUser: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/linkeduser",
                "title" : "var linkedUser: CMLinkedUser?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/notseenduration",
                "title" : "var notSeenDuration: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/time",
                "title" : "var time: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/userid",
                "title" : "var userId: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/getcodable()",
                "title" : "func getCodable() -> Contact",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/crud",
                "title" : "static let crud: CoreDataCrud<CMContact>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/deletecontacts(bytimestamp:)",
                "title" : "class func deleteContacts(byTimeStamp: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/getcontacts(req:)",
                "title" : "class func getContacts(req: ContactsRequest?) -> [Contact]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcontact\/insertorupdate(contacts:)",
                "title" : "class func insertOrUpdate(contacts: [Contact])",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmcontact",
            "title" : "CMContact",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/admin",
                "title" : "var admin: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/caneditinfo",
                "title" : "var canEditInfo: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/canspam",
                "title" : "var canSpam: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/closedthread",
                "title" : "var closedThread: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/descriptions",
                "title" : "var descriptions: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/dummyforwardinfo",
                "title" : "var dummyForwardInfo: CMForwardInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/dummymessage",
                "title" : "var dummyMessage: NSSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/dummyuserroles",
                "title" : "var dummyUserRoles: NSSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/group",
                "title" : "var group: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/inviter",
                "title" : "var inviter: CMParticipant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/joindate",
                "title" : "var joinDate: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastmessage",
                "title" : "var lastMessage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastmessagevo",
                "title" : "var lastMessageVO: CMMessage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastparticipantimage",
                "title" : "var lastParticipantImage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastparticipantname",
                "title" : "var lastParticipantName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastseenmessageid",
                "title" : "var lastSeenMessageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastseenmessagenanos",
                "title" : "var lastSeenMessageNanos: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/lastseenmessagetime",
                "title" : "var lastSeenMessageTime: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/mentioned",
                "title" : "var mentioned: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/mute",
                "title" : "var mute: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/participantcount",
                "title" : "var participantCount: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/participants",
                "title" : "var participants: NSOrderedSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partner",
                "title" : "var partner: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partnerlastdeliveredmessageid",
                "title" : "var partnerLastDeliveredMessageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partnerlastdeliveredmessagenanos",
                "title" : "var partnerLastDeliveredMessageNanos: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partnerlastdeliveredmessagetime",
                "title" : "var partnerLastDeliveredMessageTime: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partnerlastseenmessageid",
                "title" : "var partnerLastSeenMessageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partnerlastseenmessagenanos",
                "title" : "var partnerLastSeenMessageNanos: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/partnerlastseenmessagetime",
                "title" : "var partnerLastSeenMessageTime: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/pin",
                "title" : "var pin: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/pinmessage",
                "title" : "var pinMessage: CMPinMessage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/time",
                "title" : "var time: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/title",
                "title" : "var title: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/type",
                "title" : "var type: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/unreadcount",
                "title" : "var unreadCount: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/usergrouphash",
                "title" : "var userGroupHash: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/addtodummymessage(_:)-6ysa2",
                "title" : "func addToDummyMessage(CMMessage)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/addtodummymessage(_:)-72ln2",
                "title" : "func addToDummyMessage(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/addtodummyuserroles(_:)-3fkhh",
                "title" : "func addToDummyUserRoles(CMUserRole)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/addtodummyuserroles(_:)-8pfpj",
                "title" : "func addToDummyUserRoles(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/addtoparticipants(_:)-5zteg",
                "title" : "func addToParticipants(NSOrderedSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/addtoparticipants(_:)-9vpou",
                "title" : "func addToParticipants(CMParticipant)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/getcodable()",
                "title" : "func getCodable() -> Conversation",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/insertintoparticipants(_:at:)-99ldy",
                "title" : "func insertIntoParticipants(CMParticipant, at: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/insertintoparticipants(_:at:)-mzju",
                "title" : "func insertIntoParticipants([CMParticipant], at: NSIndexSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromdummymessage(_:)-110ip",
                "title" : "func removeFromDummyMessage(CMMessage)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromdummymessage(_:)-229bz",
                "title" : "func removeFromDummyMessage(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromdummyuserroles(_:)-8505i",
                "title" : "func removeFromDummyUserRoles(CMUserRole)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromdummyuserroles(_:)-9upcd",
                "title" : "func removeFromDummyUserRoles(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromparticipants(_:)-1rw05",
                "title" : "func removeFromParticipants(NSOrderedSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromparticipants(_:)-5zlrx",
                "title" : "func removeFromParticipants(CMParticipant)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromparticipants(at:)-2pnzz",
                "title" : "func removeFromParticipants(at: NSIndexSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/removefromparticipants(at:)-8htly",
                "title" : "func removeFromParticipants(at: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/replaceparticipants(at:with:)-1r5rn",
                "title" : "func replaceParticipants(at: Int, with: CMParticipant)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/replaceparticipants(at:with:)-5bqhs",
                "title" : "func replaceParticipants(at: NSIndexSet, with: [CMParticipant])",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/crud",
                "title" : "static let crud: CoreDataCrud<CMConversation>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/deleteconversations(bytimestamp:)",
                "title" : "class func deleteConversations(byTimeStamp: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/getnewthreads(count:offset:)",
                "title" : "class func getNewThreads(count: Int, offset: Int) -> [Conversation]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/getthreads(req:)",
                "title" : "class func getThreads(req: ThreadsRequest?) -> [Conversation]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/insertorupdate(conversations:resultentity:)",
                "title" : "class func insertOrUpdate(conversations: [Conversation], resultEntity: ((CMConversation) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmconversation\/searchthreads(_:)",
                "title" : "class func searchThreads(ThreadsRequest) -> [Conversation]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmconversation",
            "title" : "CMConversation",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles\/roles",
                "title" : "var roles: RolesArray?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles\/getcodable()",
                "title" : "func getCodable() -> [Roles]",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles\/crud",
                "title" : "static let crud: CoreDataCrud<CMCurrentUserRoles>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles\/convertroletocm(roles:threadid:entity:)",
                "title" : "class func convertRoleToCM(roles: [Roles], threadId: Int, entity: CMCurrentUserRoles?) -> CMCurrentUserRoles",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles\/insertorupdate(roles:threadid:resultentity:)",
                "title" : "class func insertOrUpdate(roles: [Roles], threadId: Int, resultEntity: ((CMCurrentUserRoles) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmcurrentuserroles",
            "title" : "CMCurrentUserRoles",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/hashcode",
                "title" : "var hashCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/size",
                "title" : "var size: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/type",
                "title" : "var type: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/getcodable()",
                "title" : "func getCodable() -> FileModel?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/crud",
                "title" : "static let crud: CoreDataCrud<CMFile>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/converttocm(request:entity:)",
                "title" : "class func convertToCM(request: FileModel, entity: CMFile?) -> CMFile",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmfile\/insert(request:resultentity:)",
                "title" : "class func insert(request: FileModel, resultEntity: ((CMFile) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmfile",
            "title" : "CMFile",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/conversation",
                "title" : "var conversation: CMConversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/dummymessage",
                "title" : "var dummyMessage: CMMessage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/messageid",
                "title" : "var messageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/participant",
                "title" : "var participant: CMParticipant?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/getcodable()",
                "title" : "func getCodable() -> ForwardInfo",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/crud",
                "title" : "static let crud: CoreDataCrud<CMForwardInfo>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/convertforwardinfotocm(forwardinfo:messageid:threadid:entity:)",
                "title" : "class func convertForwardInfoToCM(forwardInfo: ForwardInfo, messageId: Int?, threadId: Int?, entity: CMForwardInfo?) -> CMForwardInfo",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo\/insertorupdate(forwardinfo:messageid:threadid:resultentity:)",
                "title" : "class func insertOrUpdate(forwardInfo: ForwardInfo, messageId: Int?, threadId: Int?, resultEntity: ((CMForwardInfo) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmforwardinfo",
            "title" : "CMForwardInfo",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/actualheight",
                "title" : "var actualHeight: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/actualwidth",
                "title" : "var actualWidth: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/hashcode",
                "title" : "var hashCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/height",
                "title" : "var height: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/isthumbnail",
                "title" : "var isThumbnail: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/size",
                "title" : "var size: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/width",
                "title" : "var width: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/getcodable()",
                "title" : "func getCodable() -> ImageModel?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/crud",
                "title" : "static let crud: CoreDataCrud<CMImage>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/converttocm(request:isthumbnail:entity:)",
                "title" : "class func convertToCM(request: ImageModel, isThumbnail: Bool, entity: CMImage?) -> CMImage",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmimage\/insert(request:isthumbnail:resultentity:)",
                "title" : "class func insert(request: ImageModel, isThumbnail: Bool, resultEntity: ((CMImage) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmimage",
            "title" : "CMImage",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/coreuserid",
                "title" : "var coreUserId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/dummycontact",
                "title" : "var dummyContact: CMContact?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/nickname",
                "title" : "var nickname: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/getcodable()",
                "title" : "func getCodable() -> LinkedUser",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/crud",
                "title" : "static let crud: CoreDataCrud<CMLinkedUser>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/convertlinkusertocm(linkeduser:entity:)",
                "title" : "class func convertLinkUserToCM(linkedUser: LinkedUser, entity: CMLinkedUser?) -> CMLinkedUser",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser\/insertorupdate(linkeduser:resultentity:)",
                "title" : "class func insertOrUpdate(linkedUser: LinkedUser, resultEntity: ((CMLinkedUser) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmlinkeduser",
            "title" : "CMLinkedUser",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/conversation",
                "title" : "var conversation: CMConversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/deletable",
                "title" : "var deletable: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/delivered",
                "title" : "var delivered: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/dummyconversationlastmessagevo",
                "title" : "var dummyConversationLastMessageVO: CMConversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/editable",
                "title" : "var editable: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/edited",
                "title" : "var edited: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/forwardinfo",
                "title" : "var forwardInfo: CMForwardInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/mentioned",
                "title" : "var mentioned: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/message",
                "title" : "var message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/messagetype",
                "title" : "var messageType: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/ownerid",
                "title" : "var ownerId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/participant",
                "title" : "var participant: CMParticipant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/pinned",
                "title" : "var pinned: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/previousid",
                "title" : "var previousId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/replyinfo",
                "title" : "var replyInfo: CMReplyInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/seen",
                "title" : "var seen: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/systemmetadata",
                "title" : "var systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/time",
                "title" : "var time: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/getcodable()",
                "title" : "func getCodable() -> Message",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/crud",
                "title" : "static let crud: CoreDataCrud<CMMessage>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/convertmesagetocm(message:entity:conversation:)",
                "title" : "class func convertMesageToCM(message: Message, entity: CMMessage?, conversation: CMConversation?) -> CMMessage",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/fetchrequestwithgethistoryrequest(req:)",
                "title" : "class func fetchRequestWithGetHistoryRequest(req: GetHistoryRequest) -> NSFetchRequest<NSFetchRequestResult>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/insertorupdate(message:conversation:resultentity:)",
                "title" : "class func insertOrUpdate(message: Message, conversation: CMConversation?, resultEntity: ((CMMessage) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmessage\/insertorupdate(message:resultentity:)",
                "title" : "class func insertOrUpdate(message: Message, resultEntity: ((CMMessage) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmmessage",
            "title" : "CMMessage",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup\/conversation",
                "title" : "var conversation: CMConversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup\/idtype",
                "title" : "var idType: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup\/mutualid",
                "title" : "var mutualId: String?",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup\/crud",
                "title" : "static let crud: CoreDataCrud<CMMutualGroup>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup\/getmutualgroups(_:)",
                "title" : "class func getMutualGroups(MutualGroupsRequest) -> [Conversation]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup\/insertorupdate(conversations:req:resultentity:)",
                "title" : "class func insertOrUpdate(conversations: [Conversation], req: MutualGroupsRequest, resultEntity: ((CMMutualGroup) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmmutualgroup",
            "title" : "CMMutualGroup",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/admin",
                "title" : "var admin: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/auditor",
                "title" : "var auditor: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/bio",
                "title" : "var bio: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/blocked",
                "title" : "var blocked: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/contactfirstname",
                "title" : "var contactFirstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/contactid",
                "title" : "var contactId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/contactlastname",
                "title" : "var contactLastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/contactname",
                "title" : "var contactName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/coreuserid",
                "title" : "var coreUserId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/dummyconversationinviter",
                "title" : "var dummyConversationInviter: NSSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/dummyconversationparticipants",
                "title" : "var dummyConversationParticipants: NSSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/dummyforwardinfo",
                "title" : "var dummyForwardInfo: CMForwardInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/dummymessage",
                "title" : "var dummyMessage: NSSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/dummyreplyinfo",
                "title" : "var dummyReplyInfo: CMReplyInfo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/keyid",
                "title" : "var keyId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/myfriend",
                "title" : "var myFriend: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/notseenduration",
                "title" : "var notSeenDuration: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/online",
                "title" : "var online: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/receiveenable",
                "title" : "var receiveEnable: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/roles",
                "title" : "var roles: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/sendenable",
                "title" : "var sendEnable: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/time",
                "title" : "var time: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/addtodummyconversationinviter(_:)-2isu5",
                "title" : "func addToDummyConversationInviter(CMConversation)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/addtodummyconversationinviter(_:)-3s7ds",
                "title" : "func addToDummyConversationInviter(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/addtodummyconversationparticipants(_:)-34z6c",
                "title" : "func addToDummyConversationParticipants(CMConversation)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/addtodummyconversationparticipants(_:)-5i87e",
                "title" : "func addToDummyConversationParticipants(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/addtodummymessage(_:)-1inlb",
                "title" : "func addToDummyMessage(CMMessage)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/addtodummymessage(_:)-9ez0o",
                "title" : "func addToDummyMessage(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/getcodable()",
                "title" : "func getCodable() -> Participant",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/removefromdummyconversationinviter(_:)-8qg86",
                "title" : "func removeFromDummyConversationInviter(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/removefromdummyconversationinviter(_:)-vyjk",
                "title" : "func removeFromDummyConversationInviter(CMConversation)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/removefromdummyconversationparticipants(_:)-7cwqa",
                "title" : "func removeFromDummyConversationParticipants(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/removefromdummyconversationparticipants(_:)-7kkgn",
                "title" : "func removeFromDummyConversationParticipants(CMConversation)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/removefromdummymessage(_:)-7jern",
                "title" : "func removeFromDummyMessage(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/removefromdummymessage(_:)-dwlg",
                "title" : "func removeFromDummyMessage(CMMessage)",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/crud",
                "title" : "static let crud: CoreDataCrud<CMParticipant>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/convertparticipanttocm(participant:frommainmethod:threadid:entity:)",
                "title" : "class func convertParticipantToCM(participant: Participant, fromMainMethod: Bool, threadId: Int?, entity: CMParticipant?) -> CMParticipant",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/deleteparticipants(participants:threadid:)",
                "title" : "class func deleteParticipants(participants: [Participant]?, threadId: Int?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/insertorupdate(participant:frommainmethod:threadid:resultentity:)",
                "title" : "class func insertOrUpdate(participant: Participant, fromMainMethod: Bool, threadId: Int?, resultEntity: ((CMParticipant) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/insertorupdate(participant:resultentity:)",
                "title" : "class func insertOrUpdate(participant: Participant, resultEntity: ((CMParticipant) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmparticipant\/insertorupdateparicipants(participants:frommainmethod:threadid:resultentity:)",
                "title" : "class func insertOrUpdateParicipants(participants: [Participant]?, fromMainMethod: Bool, threadId: Int?, resultEntity: ((CMParticipant) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmparticipant",
            "title" : "CMParticipant",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/message",
                "title" : "var message: CMMessage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/messageid",
                "title" : "var messageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/notifyall",
                "title" : "var notifyAll: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/text",
                "title" : "var text: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/getcodable()",
                "title" : "func getCodable() -> PinUnpinMessage?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/crud",
                "title" : "static let crud: CoreDataCrud<CMPinMessage>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/convertpinmessagetocm(pinmessage:entity:)",
                "title" : "class func convertPinMessageToCM(pinMessage: PinUnpinMessage, entity: CMPinMessage?) -> CMPinMessage",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/insertorupdate(pinmessage:resultentity:)",
                "title" : "class func insertOrUpdate(pinMessage: PinUnpinMessage, resultEntity: ((CMPinMessage) -> ())?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/pinmessage(pinmessage:threadid:)",
                "title" : "class func pinMessage(pinMessage: PinUnpinMessage, threadId: Int?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage\/unpinmessage(pinmessage:threadid:)",
                "title" : "class func unpinMessage(pinMessage: PinUnpinMessage, threadId: Int?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmpinmessage",
            "title" : "CMPinMessage",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/deletedd",
                "title" : "var deletedd: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/dummymessage",
                "title" : "var dummyMessage: CMMessage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/message",
                "title" : "var message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/messageid",
                "title" : "var messageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/messagetype",
                "title" : "var messageType: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/participant",
                "title" : "var participant: CMParticipant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/repliedtomessageid",
                "title" : "var repliedToMessageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/systemmetadata",
                "title" : "var systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/time",
                "title" : "var time: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/getcodable()",
                "title" : "func getCodable() -> ReplyInfo",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/crud",
                "title" : "static let crud: CoreDataCrud<CMReplyInfo>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/convertreplyinfotocm(replyinfo:messageid:threadid:entity:)",
                "title" : "class func convertReplyInfoToCM(replyInfo: ReplyInfo, messageId: Int?, threadId: Int?, entity: CMReplyInfo?) -> CMReplyInfo",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo\/insertorupdate(replyinfo:messageid:threadid:resultentity:)",
                "title" : "class func insertOrUpdate(replyInfo: ReplyInfo, messageId: Int?, threadId: Int?, resultEntity: ((CMReplyInfo) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmreplyinfo",
            "title" : "CMReplyInfo",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/active",
                "title" : "var active: NSNumber",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/owner",
                "title" : "var owner: CMParticipant",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/tagparticipants",
                "title" : "var tagParticipants: Set<CMTagParticipant>?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/getcodable()",
                "title" : "func getCodable() -> Tag?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/crud",
                "title" : "static let crud: CoreDataCrud<CMTag>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/addparticipant(tagid:tagparticipant:)",
                "title" : "class func addParticipant(tagId: Int, tagParticipant: CMTagParticipant)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/converttocm(tag:entity:)",
                "title" : "class func convertToCM(tag: Tag, entity: CMTag?) -> CMTag",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtag\/insertorupdate(tags:resultentity:)",
                "title" : "class func insertOrUpdate(tags: [Tag], resultEntity: ((CMTag) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmtag",
            "title" : "CMTag",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/active",
                "title" : "var active: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/conversation",
                "title" : "var conversation: CMConversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/tagid",
                "title" : "var tagId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/getcodable()",
                "title" : "func getCodable() -> TagParticipant?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/crud",
                "title" : "static let crud: CoreDataCrud<CMTagParticipant>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/converttocm(tagparticipant:tagid:entity:)",
                "title" : "class func convertToCM(tagParticipant: TagParticipant, tagId: Int, entity: CMTagParticipant?) -> CMTagParticipant",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant\/insertorupdate(tagparticipant:tagid:resultentity:)",
                "title" : "class func insertOrUpdate(tagParticipant: TagParticipant, tagId: Int, resultEntity: ((CMTagParticipant) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmtagparticipant",
            "title" : "CMTagParticipant",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/bio",
                "title" : "var bio: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/contactsynced",
                "title" : "var contactSynced: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/coreuserid",
                "title" : "var coreUserId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/lastseen",
                "title" : "var lastSeen: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/receiveenable",
                "title" : "var receiveEnable: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/sendenable",
                "title" : "var sendEnable: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/ssoid",
                "title" : "var ssoId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/getcodable()",
                "title" : "func getCodable() -> User",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/crud",
                "title" : "static let crud: CoreDataCrud<CMUser>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/converusertocm(user:entity:)",
                "title" : "class func converUserToCM(user: User, entity: CMUser?) -> CMUser",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuser\/insertorupdate(user:resultentity:)",
                "title" : "class func insertOrUpdate(user: User, resultEntity: ((CMUser) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmuser",
            "title" : "CMUser",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/conversation",
                "title" : "var conversation: NSSet?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/id",
                "title" : "var id: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/roles",
                "title" : "var roles: NSObject?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/addtoconversation(_:)-6ltu4",
                "title" : "func addToConversation(NSSet)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/addtoconversation(_:)-cu14",
                "title" : "func addToConversation(CMConversation)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/getcodable()",
                "title" : "func getCodable() -> UserRole",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/removefromconversation(_:)-3orir",
                "title" : "func removeFromConversation(CMConversation)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/removefromconversation(_:)-p2nq",
                "title" : "func removeFromConversation(NSSet)",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/crud",
                "title" : "static let crud: CoreDataCrud<CMUserRole>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/converttocm(userrole:entity:)",
                "title" : "class func convertToCM(userRole: UserRole, entity: CMUserRole?) -> CMUserRole",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cmuserrole\/insertorupdate(userrole:resultentity:)",
                "title" : "class func insertOrUpdate(userRole: UserRole, resultEntity: ((CMUserRole) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cmuserrole",
            "title" : "CMUserRole",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/deleteallfiles()",
                "title" : "func deleteAllFiles()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/deleteallimages()",
                "title" : "func deleteAllImages()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/deleteimagefromcache(filehashcode:)",
                "title" : "func deleteImageFromCache(fileHashCode: String)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/getdataoffilewith(filepath:)",
                "title" : "func getDataOfFileWith(filePath: String) -> Data?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/getfile(hashcode:)",
                "title" : "func getFile(hashCode: String) -> (file: FileModel, path: String)?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/getfileurl(_:)",
                "title" : "func getFileUrl(String?) -> URL?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/getimage(hashcode:)",
                "title" : "func getImage(hashCode: String) -> (image: ImageModel, path: String)?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/getimageprofilecache(url:group:)",
                "title" : "func getImageProfileCache(url: String, group: String) -> Data?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/getthumbnail(hashcode:)",
                "title" : "func getThumbnail(hashCode: String) -> (image: ImageModel, path: String)?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/retrieveallfilessize()",
                "title" : "func retrieveAllFilesSize() -> UInt64",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/retrieveallimagessize()",
                "title" : "func retrieveAllImagesSize() -> UInt64",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/saveimageprofile(url:data:group:)",
                "title" : "func saveImageProfile(url: String, data: Data, group: String)",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager\/sharedinstance",
                "title" : "static let sharedInstance: CacheFileManager",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cachefilemanager",
            "title" : "CacheFileManager",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/init(textmessageuniqueid:editmessageuniqueid:forwardmessageuniqueid:filemessageuniqueid:uploadimageuniqueid:uploadfileuniqueid:)",
                "title" : "init(textMessageUniqueId: String?, editMessageUniqueId: String?, forwardMessageUniqueId: String?, fileMessageUniqueId: String?, uploadImageUniqueId: String?, uploadFileUniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/editmessageuniqueid",
                "title" : "let editMessageUniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/filemessageuniqueid",
                "title" : "let fileMessageUniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/forwardmessageuniqueid",
                "title" : "let forwardMessageUniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/textmessageuniqueid",
                "title" : "let textMessageUniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/uploadfileuniqueid",
                "title" : "let uploadFileUniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest\/uploadimageuniqueid",
                "title" : "let uploadImageUniqueId: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cancelmessagerequest",
            "title" : "CancelMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/changethreadtyperequest\/init(threadid:type:uniquename:uniqueid:)",
                "title" : "init(threadId: Int, type: ThreadTypes, uniqueName: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/changethreadtyperequest\/threadid",
                "title" : "var threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/changethreadtyperequest\/type",
                "title" : "var type: ThreadTypes",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/changethreadtyperequest\/uniquename",
                "title" : "let uniqueName: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/changethreadtyperequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/changethreadtyperequest",
            "title" : "ChangeThreadTypeRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/clearhistoryrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/clearhistoryrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/clearhistoryrequest",
            "title" : "ClearHistoryRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/closethreadrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/closethreadrequest\/threadid",
                "title" : "var threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/closethreadrequest",
            "title" : "CloseThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/==(_:_:)",
                "title" : "static func == (Contact, Contact) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/init(blocked:cellphonenumber:email:firstname:hasuser:id:image:lastname:linkeduser:notseenduration:timestamp:userid:)",
                "title" : "init(blocked: Bool?, cellphoneNumber: String?, email: String?, firstName: String?, hasUser: Bool, id: Int?, image: String?, lastName: String?, linkedUser: LinkedUser?, notSeenDuration: Int?, timeStamp: UInt?, userId: Int?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/blocked",
                "title" : "var blocked: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/hasuser",
                "title" : "var hasUser: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/linkeduser",
                "title" : "var linkedUser: LinkedUser?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/notseenduration",
                "title" : "var notSeenDuration: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/timestamp",
                "title" : "var timeStamp: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/userid",
                "title" : "var userId: Int?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contact\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/contact\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/contact\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/contact\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/contact\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/contact\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/contact",
            "title" : "Contact",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactnotseendurationrespoonse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactnotseendurationrespoonse\/notseenduration",
                "title" : "let notSeenDuration: [UserLastSeenDuration]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/contactnotseendurationrespoonse",
            "title" : "ContactNotSeenDurationRespoonse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactresponse\/contacts",
                "title" : "var contacts: [Contact]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactresponse\/contentcount",
                "title" : "var contentCount: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/contactresponse",
            "title" : "ContactResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/init(id:count:cellphonenumber:email:offset:order:query:summery:uniqueid:)",
                "title" : "init(id: Int?, count: Int, cellphoneNumber: String?, email: String?, offset: Int, order: Ordering?, query: String?, summery: Bool?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/cellphonenumber",
                "title" : "let cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/email",
                "title" : "let email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/id",
                "title" : "let id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/offset",
                "title" : "var offset: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/order",
                "title" : "let order: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/query",
                "title" : "let query: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/size",
                "title" : "var size: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/summery",
                "title" : "var summery: Bool?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contactsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/contactsrequest",
            "title" : "ContactsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/init(entityname:)",
                "title" : "init(entityName: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/delete(entity:)",
                "title" : "func delete(entity: NSManagedObject)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/deleteall()",
                "title" : "func deleteAll()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/deletewith(predicate:)",
                "title" : "func deleteWith(predicate: NSPredicate)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/fetchrequest()",
                "title" : "func fetchRequest() -> NSFetchRequest<NSFetchRequestResult>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/fetchwith(_:)-4ap1g",
                "title" : "func fetchWith(NSPredicate) -> [T]?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/fetchwith(_:)-5tu28",
                "title" : "func fetchWith(NSFetchRequest<NSFetchRequestResult>) -> [T]?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/fetchwithoffset(count:offset:predicate:sortdescriptor:)",
                "title" : "func fetchWithOffset(count: Int?, offset: Int?, predicate: NSPredicate?, sortDescriptor: [NSSortDescriptor]?) -> [T]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/find(keywithfromat:value:)",
                "title" : "func find(keyWithFromat: String, value: CVarArg) -> T?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/getall()",
                "title" : "func getAll() -> [T]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/getfetchrequest()",
                "title" : "func getFetchRequest() -> NSFetchRequest<T>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/getinsertentity()",
                "title" : "func getInsertEntity() -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/gettotalcount(predicate:)",
                "title" : "func getTotalCount(predicate: NSPredicate?) -> Int",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/insert(setentityvariables:)",
                "title" : "func insert(setEntityVariables: (T) -> ())",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/coredatacrud\/insertall(setentityvariables:)",
                "title" : "func insertAll(setEntityVariables: (T) -> ())",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/coredatacrud",
            "title" : "CoreDataCrud",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createbotrequest\/init(botname:uniqueid:)",
                "title" : "init(botName: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createbotrequest\/botname",
                "title" : "var botName: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/createbotrequest",
            "title" : "CreateBotRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createtagrequest\/init(tagname:uniqueid:)",
                "title" : "init(tagName: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createtagrequest\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createtagrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/createtagrequest",
            "title" : "CreateTagRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/init(forwardedmessageids:repliedto:text:messagetype:systemmetadata:)",
                "title" : "init(forwardedMessageIds: [String]?, repliedTo: Int?, text: String?, messageType: MessageType, systemMetadata: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/forwardedmessageids",
                "title" : "let forwardedMessageIds: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/forwardeduniqueids",
                "title" : "var forwardedUniqueIds: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/messagetype",
                "title" : "let messageType: MessageType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/repliedto",
                "title" : "let repliedTo: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/systemmetadata",
                "title" : "let systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/text",
                "title" : "let text: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/createthreadmessage",
            "title" : "CreateThreadMessage",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/init(description:image:invitees:metadata:title:type:uniquename:uniqueid:)",
                "title" : "init(description: String?, image: String?, invitees: [Invitee]?, metadata: String?, title: String, type: ThreadTypes?, uniqueName: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/image",
                "title" : "let image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/invitees",
                "title" : "let invitees: [Invitee]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/metadata",
                "title" : "let metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/title",
                "title" : "let title: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/type",
                "title" : "let type: ThreadTypes?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/uniquename",
                "title" : "let uniqueName: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/createthreadrequest",
            "title" : "CreateThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadwithmessage\/init(description:image:invitees:metadata:title:type:uniquename:message:)",
                "title" : "init(description: String?, image: String?, invitees: [Invitee], metadata: String?, title: String, type: ThreadTypes?, uniqueName: String?, message: CreateThreadMessage)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadwithmessage\/message",
                "title" : "var message: CreateThreadMessage",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/createthreadwithmessage\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/createthreadwithmessage",
            "title" : "CreateThreadWithMessage",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/currentuserrolesrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/currentuserrolesrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/currentuserrolesrequest",
            "title" : "CurrentUserRolesRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deactiveassistantrequest\/init(assistants:uniqueid:)",
                "title" : "init(assistants: [Assistant], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deactiveassistantrequest\/assistants",
                "title" : "let assistants: [Assistant]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/deactiveassistantrequest",
            "title" : "DeactiveAssistantRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/deactiveassistantrequesthandler",
            "title" : "DeactiveAssistantRequestHandler",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/deactiveassistantsresponsehandler",
            "title" : "DeactiveAssistantsResponseHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletemessagerequest\/init(deleteforall:messageid:uniqueid:)",
                "title" : "init(deleteForAll: Bool?, messageId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletemessagerequest\/deleteforall",
                "title" : "let deleteForAll: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletemessagerequest\/messageid",
                "title" : "let messageId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletemessagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/deletemessagerequest",
            "title" : "DeleteMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletetagrequest\/init(id:uniqueid:)",
                "title" : "init(id: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletetagrequest\/id",
                "title" : "var id: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/deletetagrequest",
            "title" : "DeleteTagRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletethreadrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deletethreadrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/deletethreadrequest",
            "title" : "DeleteThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/delivermessageresponse\/init(isdeliver:messageid:threadid:message:participantid:)",
                "title" : "init(isDeliver: Bool, messageId: Int?, threadId: Int?, message: Message?, participantId: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/delivermessageresponse\/isdeliver",
                "title" : "var isDeliver: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/delivermessageresponse",
            "title" : "DeliverMessageResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/deviceidrequesthandler\/getdeviceidandcreateasync(chat:)",
                "title" : "class func getDeviceIdAndCreateAsync(chat: Chat)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/deviceidrequesthandler",
            "title" : "DeviceIdRequestHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/freediskspace",
                "title" : "class var freeDiskSpace: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/freediskspaceinbytes",
                "title" : "class var freeDiskSpaceInBytes: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/totaldiskspace",
                "title" : "class var totalDiskSpace: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/totaldiskspaceinbytes",
                "title" : "class var totalDiskSpaceInBytes: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/useddiskspace",
                "title" : "class var usedDiskSpace: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/useddiskspaceinbytes",
                "title" : "class var usedDiskSpaceInBytes: Int64",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/gbformatter(_:)",
                "title" : "class func GBFormatter(Int64) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/diskstatus\/mbformatter(_:)",
                "title" : "class func MBFormatter(Int64) -> String",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/diskstatus",
            "title" : "DiskStatus",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/init(threadid:messagetype:messageid:textmessage:repliedto:metadata:uniqueid:)",
                "title" : "init(threadId: Int, messageType: MessageType, messageId: Int, textMessage: String, repliedTo: Int?, metadata: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/messageid",
                "title" : "let messageId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/messagetype",
                "title" : "let messageType: MessageType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/metadata",
                "title" : "let metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/repliedto",
                "title" : "let repliedTo: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/textmessage",
                "title" : "let textMessage: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/editmessagerequest",
            "title" : "EditMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/edittagrequest\/init(id:tagname:uniqueid:)",
                "title" : "init(id: Int, tagName: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/edittagrequest\/id",
                "title" : "var id: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/edittagrequest\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/edittagrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/edittagrequest",
            "title" : "EditTagRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/init(fileextension:link:mimetype:name:originalname:size:filehash:hashcode:parenthash:actualheight:actualwidth:)",
                "title" : "init(fileExtension: String?, link: String?, mimeType: String?, name: String?, originalName: String?, size: Int64?, fileHash: String?, hashCode: String?, parentHash: String?, actualHeight: Int?, actualWidth: Int?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/actualheight",
                "title" : "let actualHeight: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/actualwidth",
                "title" : "let actualWidth: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/extension",
                "title" : "let `extension`: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/filehash",
                "title" : "let fileHash: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/hashcode",
                "title" : "let hashCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/link",
                "title" : "let link: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/mimetype",
                "title" : "let mimeType: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/name",
                "title" : "let name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/originalname",
                "title" : "let originalName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/parenthash",
                "title" : "let parentHash: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/size",
                "title" : "let size: Int64?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/filedetail\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/filedetail\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/filedetail\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/filedetail",
            "title" : "FileDetail",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/init(file:filehash:hashcode:name:)",
                "title" : "init(file: FileDetail, fileHash: String?, hashCode: String?, name: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/file",
                "title" : "let file: FileDetail?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/filehash",
                "title" : "let fileHash: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/hashcode",
                "title" : "let hashCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/name",
                "title" : "let name: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/filemetadata\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/filemetadata",
            "title" : "FileMetaData",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filerequest\/init(hashcode:checkusergroupaccess:forcetodownloadfromserver:)",
                "title" : "init(hashCode: String, checkUserGroupAccess: Bool, forceToDownloadFromServer: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filerequest\/checkusergroupaccess",
                "title" : "let checkUserGroupAccess: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filerequest\/forcetodownloadfromserver",
                "title" : "var forceToDownloadFromServer: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filerequest\/hashcode",
                "title" : "let hashCode: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/filerequest",
            "title" : "FileRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/init(conversation:participant:)",
                "title" : "init(conversation: Conversation?, participant: Participant?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/conversation",
                "title" : "var conversation: Conversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/participant",
                "title" : "var participant: Participant?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/forwardinfo\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/forwardinfo",
            "title" : "ForwardInfo",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardmessagerequest\/init(threadid:messageid:uniqueid:)",
                "title" : "init(threadId: Int, messageId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardmessagerequest\/init(threadid:messageids:uniqueid:)",
                "title" : "init(threadId: Int, messageIds: [Int], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardmessagerequest\/messageids",
                "title" : "let messageIds: [Int]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardmessagerequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/forwardmessagerequest\/uniqueids",
                "title" : "let uniqueIds: [String]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/forwardmessagerequest",
            "title" : "ForwardMessageRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/getassistantshistoryrequesthandler",
            "title" : "GetAssistantsHistoryRequestHandler",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/getassistantsrequesthandler",
            "title" : "GetAssistantsRequestHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/init(threadid:count:fromtime:fromtimenanos:messageid:messagetype:metadatacriteria:offset:order:query:totime:totimenanos:uniqueids:userid:hashtag:messagethreadid:firstmessageid:lastmessageid:senderid:historytime:allmentioned:unreadmentioned:-42jsa",
                "title" : "init(threadId: Int, count: Int?, fromTime: UInt?, fromTimeNanos: UInt?, messageId: Int?, messageType: Int?, metadataCriteria: SearchMetadataCriteria?, offset: Int?, order: String?, query: String?, toTime: UInt?, toTimeNanos: UInt?, uniqueIds: [String]?, userId: Int?, hashtag: String?, messageThreadId: Int?, firstMessageId: Int?, lastMessageId: Int?, senderId: Int?, historyTime: UInt?, allMentioned: Bool?, unreadMentioned: Bool?, lastMessageTime: UInt?, historyEndTime: UInt?, readOnly: Bool, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/allmentioned",
                "title" : "var allMentioned: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/firstmessageid",
                "title" : "var firstMessageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/fromtime",
                "title" : "let fromTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/fromtimenanos",
                "title" : "let fromTimeNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/hashtag",
                "title" : "let hashtag: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/historyendtime",
                "title" : "var historyEndTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/historytime",
                "title" : "var historyTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/lastmessageid",
                "title" : "var lastMessageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/lastmessagetime",
                "title" : "var lastMessageTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/messageid",
                "title" : "let messageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/messagethreadid",
                "title" : "var messageThreadId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/messagetype",
                "title" : "let messageType: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/metadatacriteria",
                "title" : "let metadataCriteria: SearchMetadataCriteria?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/offset",
                "title" : "var offset: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/order",
                "title" : "let order: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/query",
                "title" : "let query: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/readonly",
                "title" : "var readOnly: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/senderid",
                "title" : "var senderId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/totime",
                "title" : "let toTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/totimenanos",
                "title" : "let toTimeNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/uniqueids",
                "title" : "let uniqueIds: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/unreadmentioned",
                "title" : "var unreadMentioned: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/userid",
                "title" : "let userId: Int?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/gethistoryrequest",
            "title" : "GetHistoryRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gettagparticipantsrequest\/init(id:uniqueid:)",
                "title" : "init(id: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/gettagparticipantsrequest\/id",
                "title" : "var id: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/gettagparticipantsrequest",
            "title" : "GetTagParticipantsRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/getuserbotsrequest",
            "title" : "GetUserBotsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/init(hashcode:checkusergroupaccess:forcetodownloadfromserver:isthumbnail:quality:size:crop:)",
                "title" : "init(hashCode: String, checkUserGroupAccess: Bool, forceToDownloadFromServer: Bool, isThumbnail: Bool, quality: Float?, size: ImageSize?, crop: Bool?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/checkusergroupaccess",
                "title" : "let checkUserGroupAccess: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/crop",
                "title" : "let crop: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/forcetodownloadfromserver",
                "title" : "var forceToDownloadFromServer: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/hashcode",
                "title" : "let hashCode: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/isthumbnail",
                "title" : "let isThumbnail: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/quality",
                "title" : "let quality: Float?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/size",
                "title" : "let size: ImageSize?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/imagerequest",
            "title" : "ImageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/invitee\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/invitee\/init(id:idtype:)",
                "title" : "init(id: String?, idType: InviteeTypes?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/invitee\/id",
                "title" : "var id: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/invitee\/idtype",
                "title" : "var idType: Int?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/invitee\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/invitee\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/invitee\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/invitee",
            "title" : "Invitee",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/isthreadnamepublicrequest\/init(name:uniqueid:)",
                "title" : "init(name: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/isthreadnamepublicrequest\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/isthreadnamepublicrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/isthreadnamepublicrequest",
            "title" : "IsThreadNamePublicRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/joinpublicthreadrequest\/init(threadname:uniqueid:)",
                "title" : "init(threadName: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/joinpublicthreadrequest\/threadname",
                "title" : "var threadName: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/joinpublicthreadrequest",
            "title" : "JoinPublicThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leavethreadrequest\/init(threadid:clearhistory:uniqueid:)",
                "title" : "init(threadId: Int, clearHistory: Bool?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leavethreadrequest\/clearhistory",
                "title" : "let clearHistory: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leavethreadrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leavethreadrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/leavethreadrequest",
            "title" : "LeaveThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/init(coreuserid:image:name:nickname:username:)",
                "title" : "init(coreUserId: Int?, image: String?, name: String?, nickname: String?, username: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/coreuserid",
                "title" : "var coreUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/nickname",
                "title" : "var nickname: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/linkeduser\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/linkeduser",
            "title" : "LinkedUser",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/location\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/location\/x",
                "title" : "let x: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/location\/y",
                "title" : "let y: Double",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/location\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/location\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/location\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/location",
            "title" : "Location",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/init(mapcenter:threadid:usergrouphash:mapheight:maptype:mapwidth:mapzoom:mapimagename:repliedto:systemmetadata:textmessage:uniqueid:)",
                "title" : "init(mapCenter: Cordinate, threadId: Int, userGroupHash: String, mapHeight: Int, mapType: String, mapWidth: Int, mapZoom: Int, mapImageName: String?, repliedTo: Int?, systemMetadata: String?, textMessage: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/mapcenter",
                "title" : "let mapCenter: Cordinate",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/mapheight",
                "title" : "let mapHeight: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/mapimagename",
                "title" : "let mapImageName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/maptype",
                "title" : "let mapType: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/mapwidth",
                "title" : "let mapWidth: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/mapzoom",
                "title" : "let mapZoom: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/messagetype",
                "title" : "let messageType: MessageType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/repliedto",
                "title" : "let repliedTo: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/systemmetadata",
                "title" : "let systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/textmessage",
                "title" : "let textMessage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest\/usergrouphash",
                "title" : "let userGroupHash: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/locationmessagerequest",
            "title" : "LocationMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/address",
                "title" : "let address: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/category",
                "title" : "let category: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/location",
                "title" : "var location: Location?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/neighbourhood",
                "title" : "var neighbourhood: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/region",
                "title" : "let region: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/title",
                "title" : "let title: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/type",
                "title" : "let type: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/mapitem\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/mapitem\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/mapitem\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapitem",
            "title" : "MapItem",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/address",
                "title" : "var address: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/city",
                "title" : "var city: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/inoddevenzone",
                "title" : "var inOddEvenZone: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/intrafficzone",
                "title" : "var inTrafficZone: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/municipalityzone",
                "title" : "var municipalityZone: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/neighbourhood",
                "title" : "var neighbourhood: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/state",
                "title" : "var state: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/mapreverse\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapreverse",
            "title" : "MapReverse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverserequest\/init(lat:lng:uniqueid:)",
                "title" : "init(lat: Double, lng: Double, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverserequest\/lat",
                "title" : "let lat: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverserequest\/lng",
                "title" : "let lng: Double",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapreverserequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapreverserequest",
            "title" : "MapReverseRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/maproutingrequest\/init(alternative:origin:destination:uniqueid:)",
                "title" : "init(alternative: Bool?, origin: Cordinate, destination: Cordinate, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/maproutingrequest\/alternative",
                "title" : "var alternative: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/maproutingrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/maproutingrequest",
            "title" : "MapRoutingRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/maproutingresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/maproutingresponse\/routes",
                "title" : "var routes: [Route]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/maproutingresponse",
            "title" : "MapRoutingResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearch\/init(count:items:)",
                "title" : "init(count: Int, items: [MapItem])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearch\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearch\/items",
                "title" : "var items: [MapItem]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapsearch",
            "title" : "MapSearch",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchrequest\/init(lat:lng:term:uniqueid:)",
                "title" : "init(lat: Double, lng: Double, term: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchrequest\/lat",
                "title" : "let lat: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchrequest\/lng",
                "title" : "let lng: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchrequest\/term",
                "title" : "let term: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapsearchrequest",
            "title" : "MapSearchRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchresponse\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapsearchresponse\/items",
                "title" : "var items: [MapItem]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapsearchresponse",
            "title" : "MapSearchResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/init(center:key:height:width:zoom:type:)",
                "title" : "init(center: Cordinate, key: String?, height: Int, width: Int, zoom: Int, type: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/center",
                "title" : "var center: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/height",
                "title" : "var height: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/key",
                "title" : "var key: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/type",
                "title" : "var type: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/width",
                "title" : "var width: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/zoom",
                "title" : "var zoom: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mapstaticimagerequest",
            "title" : "MapStaticImageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mentionrequest\/init(threadid:onlyunreadmention:count:offset:uniqueid:)",
                "title" : "init(threadId: Int, onlyUnreadMention: Bool, count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mentionrequest\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mentionrequest\/offset",
                "title" : "var offset: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mentionrequest\/onlyunreadmention",
                "title" : "let onlyUnreadMention: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mentionrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mentionrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mentionrequest",
            "title" : "MentionRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagedeliverrequest\/init(messageid:uniqueid:)",
                "title" : "init(messageId: Int, uniqueId: String?)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messagedeliverrequest",
            "title" : "MessageDeliverRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagedeliveredusersrequest\/init(messageid:count:offset:uniqueid:)",
                "title" : "init(messageId: Int, count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagedeliveredusersrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messagedeliveredusersrequest",
            "title" : "MessageDeliveredUsersRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagegaps\/messageid",
                "title" : "var messageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagegaps\/previousid",
                "title" : "var previousId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagegaps\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messagegaps",
            "title" : "MessageGaps",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageresponse\/init(message:messageid:threadid:participantid:)",
                "title" : "init(message: Message?, messageId: Int?, threadId: Int?, participantId: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageresponse\/message",
                "title" : "var message: Message?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageresponse\/messageid",
                "title" : "var messageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageresponse\/participantid",
                "title" : "var participantId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageresponse\/threadid",
                "title" : "var threadId: Int?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messageresponse",
            "title" : "MessageResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageseenbyusersrequest\/init(messageid:count:offset:uniqueid:)",
                "title" : "init(messageId: Int, count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageseenbyusersrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messageseenbyusersrequest",
            "title" : "MessageSeenByUsersRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageseenrequest\/init(messageid:uniqueid:)",
                "title" : "init(messageId: Int, uniqueId: String?)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messageseenrequest",
            "title" : "MessageSeenRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/muteunmutethreadrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/muteunmutethreadrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/muteunmutethreadrequest",
            "title" : "MuteUnmuteThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mutualgroupsrequest\/init(tobeuser:count:offset:uniqueid:)",
                "title" : "init(toBeUser: Invitee, count: Int, offset: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mutualgroupsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mutualgroupsrequest",
            "title" : "MutualGroupsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/notseendurationrequest\/init(userids:uniqueid:)",
                "title" : "init(userIds: [Int], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/notseendurationrequest\/userids",
                "title" : "let userIds: [Int]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/notseendurationrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/notseendurationrequest",
            "title" : "NotSeenDurationRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pagination\/init(hasnext:count:offset:)",
                "title" : "init(hasNext: Bool, count: Int, offset: Int)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pagination\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pagination\/hasnext",
                "title" : "var hasNext: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pagination\/offset",
                "title" : "var offset: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/pagination",
            "title" : "Pagination",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/paginationwithcontentcount\/init(count:offset:totalcount:)",
                "title" : "init(count: Int, offset: Int, totalCount: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/paginationwithcontentcount\/nextoffset",
                "title" : "var nextOffset: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/paginationwithcontentcount\/totalcount",
                "title" : "var totalCount: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/paginationwithcontentcount",
            "title" : "PaginationWithContentCount",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/==(_:_:)",
                "title" : "static func == (Participant, Participant) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/init(admin:auditor:blocked:cellphonenumber:contactfirstname:contactid:contactname:contactlastname:coreuserid:email:firstname:id:image:keyid:lastname:myfriend:name:notseenduration:online:receiveenable:roles:sendenable:username:chatprofilevo:-4hzva",
                "title" : "init(admin: Bool?, auditor: Bool?, blocked: Bool?, cellphoneNumber: String?, contactFirstName: String?, contactId: Int?, contactName: String?, contactLastName: String?, coreUserId: Int?, email: String?, firstName: String?, id: Int?, image: String?, keyId: String?, lastName: String?, myFriend: Bool?, name: String?, notSeenDuration: Int?, online: Bool?, receiveEnable: Bool?, roles: [String]?, sendEnable: Bool?, username: String?, chatProfileVO: Profile?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/init(theparticipant:)",
                "title" : "init(theParticipant: Participant)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/admin",
                "title" : "var admin: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/auditor",
                "title" : "var auditor: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/blocked",
                "title" : "var blocked: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/chatprofilevo",
                "title" : "var chatProfileVO: Profile?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/contactfirstname",
                "title" : "var contactFirstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/contactid",
                "title" : "var contactId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/contactlastname",
                "title" : "var contactLastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/contactname",
                "title" : "var contactName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/coreuserid",
                "title" : "var coreUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/keyid",
                "title" : "var keyId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/myfriend",
                "title" : "var myFriend: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/notseenduration",
                "title" : "var notSeenDuration: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/online",
                "title" : "var online: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/receiveenable",
                "title" : "var receiveEnable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/roles",
                "title" : "var roles: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/sendenable",
                "title" : "var sendEnable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/participant\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/participant\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/participant\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/participant\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/participant\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/participant\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/participant",
            "title" : "Participant",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/phonecontact\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/phonecontact\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/phonecontact\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/phonecontact\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/phonecontact\/savephonebookcontact(contact:)",
                "title" : "class func savePhoneBookContact(contact: AddContactRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/phonecontact\/updateorinsertphonebooks(contacts:)",
                "title" : "class func updateOrInsertPhoneBooks(contacts: [AddContactRequest])",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/phonecontact",
            "title" : "PhoneContact",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/init(messageid:notifyall:text:sender:time:)",
                "title" : "init(messageId: Int, notifyAll: Bool, text: String?, sender: Participant?, time: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/messageid",
                "title" : "let messageId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/notifyall",
                "title" : "let notifyAll: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/sender",
                "title" : "let sender: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/text",
                "title" : "let text: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/time",
                "title" : "let time: Int?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessage",
            "title" : "PinUnpinMessage",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessagerequest\/init(messageid:notifyall:uniqueid:)",
                "title" : "init(messageId: Int, notifyAll: Bool, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessagerequest\/messageid",
                "title" : "let messageId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessagerequest\/notifyall",
                "title" : "let notifyAll: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/pinunpinmessagerequest",
            "title" : "PinUnpinMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinthreadrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinunpinthreadrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/pinunpinthreadrequest",
            "title" : "PinUnpinThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/profile\/init(bio:metadata:)",
                "title" : "init(bio: String?, metadata: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/profile\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/profile\/bio",
                "title" : "var bio: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/profile\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/profile\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/profile\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/profile\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/profile",
            "title" : "Profile",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/messageid",
                "title" : "var messageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/messagetype",
                "title" : "var messageType: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/repliedto",
                "title" : "var repliedTo: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/textmessage",
                "title" : "var textMessage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/getcodable()",
                "title" : "func getCodable() -> EditMessageRequest?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/crud",
                "title" : "static let crud: CoreDataCrud<QueueOfEditMessages>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/converttocm(request:entity:)",
                "title" : "class func convertToCM(request: EditMessageRequest, entity: QueueOfEditMessages?) -> QueueOfEditMessages",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages\/insert(request:resultentity:)",
                "title" : "class func insert(request: EditMessageRequest, resultEntity: ((QueueOfEditMessages) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/queueofeditmessages",
            "title" : "QueueOfEditMessages",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/fileextension",
                "title" : "var fileExtension: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/filename",
                "title" : "var fileName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/filetosend",
                "title" : "var fileToSend: NSData?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/hc",
                "title" : "var hC: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/imagetosend",
                "title" : "var imageToSend: NSData?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/ispublic",
                "title" : "var isPublic: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/messagetype",
                "title" : "var messageType: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/mimetype",
                "title" : "var mimeType: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/originalname",
                "title" : "var originalName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/repliedto",
                "title" : "var repliedTo: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/textmessage",
                "title" : "var textMessage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/usergrouphash",
                "title" : "var userGroupHash: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/wc",
                "title" : "var wC: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/xc",
                "title" : "var xC: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/yc",
                "title" : "var yC: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/getcodable()",
                "title" : "func getCodable() -> (UploadFileRequest, SendTextMessageRequest)?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/crud",
                "title" : "static let crud: CoreDataCrud<QueueOfFileMessages>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/convertfiletocm(request:textmessage:entity:)",
                "title" : "class func convertFileToCM(request: UploadFileRequest, textMessage: SendTextMessageRequest, entity: QueueOfFileMessages?) -> QueueOfFileMessages",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/convertimagetocm(request:textmessage:entity:)",
                "title" : "class func convertImageToCM(request: UploadImageRequest, textMessage: SendTextMessageRequest, entity: QueueOfFileMessages?) -> QueueOfFileMessages",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages\/insert(request:textmessage:resultentity:)",
                "title" : "class func insert(request: UploadFileRequest, textMessage: SendTextMessageRequest, resultEntity: ((QueueOfFileMessages) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/queueoffilemessages",
            "title" : "QueueOfFileMessages",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/messageid",
                "title" : "var messageId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/repliedto",
                "title" : "var repliedTo: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/getcodable()",
                "title" : "func getCodable() -> ForwardMessageRequest?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/crud",
                "title" : "static let crud: CoreDataCrud<QueueOfForwardMessages>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/converttocm(request:messageid:entity:)",
                "title" : "class func convertToCM(request: ForwardMessageRequest, messageId: Int, entity: QueueOfForwardMessages?) -> QueueOfForwardMessages",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages\/insert(request:resultentity:)",
                "title" : "class func insert(request: ForwardMessageRequest, resultEntity: ((QueueOfForwardMessages) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/queueofforwardmessages",
            "title" : "QueueOfForwardMessages",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/messagetype",
                "title" : "var messageType: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/repliedto",
                "title" : "var repliedTo: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/systemmetadata",
                "title" : "var systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/textmessage",
                "title" : "var textMessage: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/threadid",
                "title" : "var threadId: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/getcodable()",
                "title" : "func getCodable() -> SendTextMessageRequest?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/crud",
                "title" : "static let crud: CoreDataCrud<QueueOfTextMessages>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/converttocm(request:entity:)",
                "title" : "class func convertToCM(request: SendTextMessageRequest, entity: QueueOfTextMessages?) -> QueueOfTextMessages",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages\/insert(request:resultentity:)",
                "title" : "class func insert(request: SendTextMessageRequest, resultEntity: ((QueueOfTextMessages) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/queueoftextmessages",
            "title" : "QueueOfTextMessages",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/datatosend",
                "title" : "var dataToSend: NSData?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/fileextension",
                "title" : "var fileExtension: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/filename",
                "title" : "var fileName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/filesize",
                "title" : "var fileSize: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/ispublic",
                "title" : "var isPublic: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/mimetype",
                "title" : "var mimeType: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/originalname",
                "title" : "var originalName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/usergrouphash",
                "title" : "var userGroupHash: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/getcodable()",
                "title" : "func getCodable() -> UploadFileRequest?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/crud",
                "title" : "static let crud: CoreDataCrud<QueueOfUploadFiles>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/convertfiletocm(request:entity:)",
                "title" : "class func convertFileToCM(request: UploadFileRequest, entity: QueueOfUploadFiles?) -> QueueOfUploadFiles",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles\/insert(request:resultentity:)",
                "title" : "class func insert(request: UploadFileRequest, resultEntity: ((QueueOfUploadFiles) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/queueofuploadfiles",
            "title" : "QueueOfUploadFiles",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/datatosend",
                "title" : "var dataToSend: NSData?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/fileextension",
                "title" : "var fileExtension: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/filename",
                "title" : "var fileName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/filesize",
                "title" : "var fileSize: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/hc",
                "title" : "var hC: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/ispublic",
                "title" : "var isPublic: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/mimetype",
                "title" : "var mimeType: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/originalname",
                "title" : "var originalName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/usergrouphash",
                "title" : "var userGroupHash: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/wc",
                "title" : "var wC: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/xc",
                "title" : "var xC: NSNumber?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/yc",
                "title" : "var yC: NSNumber?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/getcodable()",
                "title" : "func getCodable() -> UploadImageRequest?",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/crud",
                "title" : "static let crud: CoreDataCrud<QueueOfUploadImages>",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/convertfiletocm(request:entity:)",
                "title" : "class func convertFileToCM(request: UploadImageRequest, entity: QueueOfUploadImages?) -> QueueOfUploadImages",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages\/insert(request:resultentity:)",
                "title" : "class func insert(request: UploadImageRequest, resultEntity: ((QueueOfUploadImages) -> ())?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/queueofuploadimages",
            "title" : "QueueOfUploadImages",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/registerassistantrequest\/init(assistants:uniqueid:)",
                "title" : "init(assistants: [Assistant], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/registerassistantrequest\/assistants",
                "title" : "let assistants: [Assistant]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/registerassistantrequest",
            "title" : "RegisterAssistantRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/registerassistantrequesthandler",
            "title" : "RegisterAssistantRequestHandler",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/registerassistantsresponsehandler",
            "title" : "RegisterAssistantsResponseHandler",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/removebotcommandrequest",
            "title" : "RemoveBotCommandRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removecontactresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removecontactresponse\/deteled",
                "title" : "var deteled: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/removecontactresponse",
            "title" : "RemoveContactResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removecontactsrequest\/init(contactid:uniqueid:)",
                "title" : "init(contactId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removecontactsrequest\/contactid",
                "title" : "let contactId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removecontactsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/removecontactsrequest",
            "title" : "RemoveContactsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removeparticipantsrequest\/init(participantid:threadid:uniqueid:)",
                "title" : "init(participantId: Int, threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removeparticipantsrequest\/init(participantids:threadid:uniqueid:)",
                "title" : "init(participantIds: [Int], threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removeparticipantsrequest\/participantids",
                "title" : "let participantIds: [Int]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removeparticipantsrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/removeparticipantsrequest",
            "title" : "RemoveParticipantsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removetagparticipantsrequest\/init(tagid:tagparticipants:uniqueid:)",
                "title" : "init(tagId: Int, tagParticipants: [TagParticipant], uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removetagparticipantsrequest\/tagid",
                "title" : "var tagId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/removetagparticipantsrequest\/tagparticipants",
                "title" : "var tagParticipants: [TagParticipant]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/removetagparticipantsrequest",
            "title" : "RemoveTagParticipantsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/init(deleted:repliedtomessageid:message:messagetype:metadata:systemmetadata:time:participant:)",
                "title" : "init(deleted: Bool?, repliedToMessageId: Int?, message: String?, messageType: Int?, metadata: String?, systemMetadata: String?, time: UInt?, participant: Participant?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/deleted",
                "title" : "var deleted: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/message",
                "title" : "var message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/messagetype",
                "title" : "var messageType: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/participant",
                "title" : "var participant: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/repliedtomessageid",
                "title" : "var repliedToMessageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/repliedtomessagenanos",
                "title" : "var repliedToMessageNanos: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/repliedtomessagetime",
                "title" : "var repliedToMessageTime: UInt?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/systemmetadata",
                "title" : "var systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/time",
                "title" : "var time: UInt?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/replyinfo\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/replyinfo",
            "title" : "ReplyInfo",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/replymessagerequest\/init(threadid:repliedto:textmessage:messagetype:metadata:systemmetadata:uniqueid:)",
                "title" : "init(threadId: Int, repliedTo: Int, textMessage: String, messageType: MessageType, metadata: String?, systemMetadata: String?, uniqueId: String?)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/replymessagerequest",
            "title" : "ReplyMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/rolesarray\/init(coder:)",
                "title" : "init?(coder: NSCoder)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/rolesarray\/roles",
                "title" : "var roles: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/rolesarray\/encode(with:)",
                "title" : "func encode(with: NSCoder)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/rolesarray",
            "title" : "RolesArray",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/rolesrequest\/init(userroles:threadid:uniqueid:)",
                "title" : "init(userRoles: [UserRoleRequest], threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/rolesrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/rolesrequest\/userroles",
                "title" : "let userRoles: [UserRoleRequest]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/rolesrequest",
            "title" : "RolesRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/safeleavethreadrequest\/init(threadid:participantid:clearhistory:uniqueid:)",
                "title" : "init(threadId: Int, participantId: Int, clearHistory: Bool?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/safeleavethreadrequest\/participantid",
                "title" : "let participantId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/safeleavethreadrequest",
            "title" : "SafeLeaveThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/seenmessageresponse\/init(isseen:messageid:threadid:message:participantid:)",
                "title" : "init(isSeen: Bool, messageId: Int?, threadId: Int?, message: Message?, participantId: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/seenmessageresponse\/isseen",
                "title" : "var isSeen: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/seenmessageresponse",
            "title" : "SeenMessageResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendsignalmessagerequest\/init(signaltype:threadid:uniqueid:)",
                "title" : "init(signalType: SignalMessageType, threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendsignalmessagerequest\/signaltype",
                "title" : "let signalType: SignalMessageType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendsignalmessagerequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendsignalmessagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/sendsignalmessagerequest",
            "title" : "SendSignalMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest\/init(statustype:contactid:uniqueid:)",
                "title" : "init(statusType: StatusPingType, contactId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest\/init(statustype:threadid:uniqueid:)",
                "title" : "init(statusType: StatusPingType, threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest\/init(statustype:uniqueid:)",
                "title" : "init(statusType: StatusPingType, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest\/id",
                "title" : "let id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest\/statustype",
                "title" : "let statusType: StatusPingType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/sendstatuspingrequest",
            "title" : "SendStatusPingRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/init(threadid:textmessage:messagetype:metadata:repliedto:systemmetadata:uniqueid:)",
                "title" : "init(threadId: Int?, textMessage: String, messageType: MessageType, metadata: String?, repliedTo: Int?, systemMetadata: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/messagetype",
                "title" : "let messageType: MessageType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/repliedto",
                "title" : "let repliedTo: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/systemmetadata",
                "title" : "let systemMetadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/textmessage",
                "title" : "let textMessage: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest\/threadid",
                "title" : "var threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/sendtextmessagerequest",
            "title" : "SendTextMessageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sentmessageresponse\/init(issent:messageid:threadid:message:participantid:)",
                "title" : "init(isSent: Bool, messageId: Int?, threadId: Int?, message: Message?, participantId: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sentmessageresponse\/issent",
                "title" : "var isSent: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/sentmessageresponse",
            "title" : "SentMessageResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/spamthreadrequest\/init(threadid:uniqueid:)",
                "title" : "init(threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/spamthreadrequest\/threadid",
                "title" : "var threadId: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/spamthreadrequest",
            "title" : "SpamThreadRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/startstopbotrequest\/init(botname:threadid:uniqueid:)",
                "title" : "init(botName: String, threadId: Int, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/startstopbotrequest\/botname",
                "title" : "let botName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/startstopbotrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/startstopbotrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/startstopbotrequest",
            "title" : "StartStopBotRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/active",
                "title" : "var active: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/bot",
                "title" : "var bot: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/chatreceiveenable",
                "title" : "var chatReceiveEnable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/chatsendenable",
                "title" : "var chatSendEnable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/creator",
                "title" : "var creator: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/owner",
                "title" : "var owner: Participant?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/title",
                "title" : "var title: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/thing\/type",
                "title" : "var type: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/thing\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/thing\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/thing\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/thing",
            "title" : "Thing",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/init(threadid:offset:count:admin:uniqueid:)",
                "title" : "init(threadId: Int, offset: Int, count: Int, admin: Bool, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/admin",
                "title" : "var admin: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/count",
                "title" : "let count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/offset",
                "title" : "let offset: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest",
            "title" : "ThreadParticipantsRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/init(count:offset:name:new:threadids:creatorcoreuserid:partnercoreuserid:partnercorecontactid:metadatacriteria:uniqueid:)",
                "title" : "init(count: Int, offset: Int, name: String?, new: Bool?, threadIds: [Int]?, creatorCoreUserId: Int?, partnerCoreUserId: Int?, partnerCoreContactId: Int?, metadataCriteria: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/count",
                "title" : "let count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/creatorcoreuserid",
                "title" : "let creatorCoreUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/metadatacriteria",
                "title" : "var metadataCriteria: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/new",
                "title" : "let new: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/offset",
                "title" : "let offset: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/partnercorecontactid",
                "title" : "let partnerCoreContactId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/partnercoreuserid",
                "title" : "let partnerCoreUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/threadids",
                "title" : "let threadIds: [Int]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadsrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/threadsrequest",
            "title" : "ThreadsRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/unblockassistatrequesthandler",
            "title" : "UnBlockAssistatRequestHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unblockrequest\/init(contactid:threadid:userid:uniqueid:)",
                "title" : "init(contactId: Int?, threadId: Int?, userId: Int?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unblockrequest\/contactid",
                "title" : "let contactId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unblockrequest\/threadid",
                "title" : "let threadId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unblockrequest\/userid",
                "title" : "let userId: Int?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unblockrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/unblockrequest",
            "title" : "UnBlockRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unreadmessagecountrequest\/init(countmutedthreads:uniqueid:)",
                "title" : "init(countMutedThreads: Bool, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/unreadmessagecountrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/unreadmessagecountrequest",
            "title" : "UnreadMessageCountRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatechatprofile\/init(bio:metadata:uniqueid:)",
                "title" : "init(bio: String?, metadata: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatechatprofile\/bio",
                "title" : "let bio: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatechatprofile\/metadata",
                "title" : "let metadata: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatechatprofile\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/updatechatprofile",
            "title" : "UpdateChatProfile",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/init(cellphonenumber:email:firstname:id:lastname:username:uniqueid:)",
                "title" : "init(cellphoneNumber: String, email: String, firstName: String, id: Int, lastName: String, username: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/cellphonenumber",
                "title" : "let cellphoneNumber: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/email",
                "title" : "let email: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/firstname",
                "title" : "let firstName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/id",
                "title" : "let id: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/lastname",
                "title" : "let lastName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/username",
                "title" : "let username: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/updatecontactrequest",
            "title" : "UpdateContactRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/init(description:metadata:threadid:threadimage:title:uniqueid:)",
                "title" : "init(description: String?, metadata: String?, threadId: Int, threadImage: UploadImageRequest?, title: String, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/metadata",
                "title" : "var metadata: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/threadid",
                "title" : "let threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/threadimage",
                "title" : "var threadImage: UploadImageRequest?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/title",
                "title" : "let title: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequest",
            "title" : "UpdateThreadInfoRequest",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforequesthandler",
            "title" : "UpdateThreadInfoRequestHandler",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/updatethreadinforesponsehandler",
            "title" : "UpdateThreadInfoResponseHandler",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/init(data:fileextension:filename:description:ispublic:mimetype:originalname:usergrouphash:uniqueid:)",
                "title" : "init(data: Data, fileExtension: String?, fileName: String?, description: String?, isPublic: Bool?, mimeType: String?, originalName: String?, userGroupHash: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/data",
                "title" : "var data: Data",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/description",
                "title" : "var description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/fileextension",
                "title" : "var fileExtension: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/filename",
                "title" : "var fileName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/filesize",
                "title" : "var fileSize: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/ispublic",
                "title" : "var isPublic: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/mimetype",
                "title" : "var mimeType: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/originalname",
                "title" : "var originalName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/usergrouphash",
                "title" : "var userGroupHash: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/uploadfilerequest",
            "title" : "UploadFileRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfileresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/uploadfileresponse",
            "title" : "UploadFileResponse",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest\/init(data:xc:yc:hc:wc:fileextension:filename:mimetype:originalname:usergrouphash:uniqueid:ispublic:)",
                "title" : "init(data: Data, xC: Int, yC: Int, hC: Int, wC: Int, fileExtension: String?, fileName: String?, mimeType: String?, originalName: String?, userGroupHash: String?, uniqueId: String?, isPublic: Bool?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest\/hc",
                "title" : "var hC: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest\/wc",
                "title" : "var wC: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest\/xc",
                "title" : "var xC: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest\/yc",
                "title" : "var yC: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/uploadimagerequest",
            "title" : "UploadImageRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/init(cellphonenumber:contactsynced:coreuserid:email:id:image:lastseen:name:receiveenable:sendenable:username:ssoid:firstname:lastname:chatprofilevo:)",
                "title" : "init(cellphoneNumber: String?, contactSynced: Bool?, coreUserId: Int?, email: String?, id: Int?, image: String?, lastSeen: Int?, name: String?, receiveEnable: Bool?, sendEnable: Bool?, username: String?, ssoId: String?, firstName: String?, lastName: String?, chatProfileVO: Profile?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/cellphonenumber",
                "title" : "var cellphoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/chatprofilevo",
                "title" : "var chatProfileVO: Profile?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/contactsynced",
                "title" : "var contactSynced: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/coreuserid",
                "title" : "var coreUserId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/firstname",
                "title" : "var firstName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/id",
                "title" : "var id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/lastname",
                "title" : "var lastName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/lastseen",
                "title" : "var lastSeen: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/receiveenable",
                "title" : "var receiveEnable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/sendenable",
                "title" : "var sendEnable: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/ssoid",
                "title" : "var ssoId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/user\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/user\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/user\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/user\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/user",
            "title" : "User",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/userinforequest",
            "title" : "UserInfoRequest",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration\/time",
                "title" : "var time: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration\/userid",
                "title" : "var userId: Int",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/userlastseenduration",
            "title" : "UserLastSeenDuration",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/init(userid:name:roles:)",
                "title" : "init(userId: Int, name: String, roles: [String]?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/image",
                "title" : "var image: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/roles",
                "title" : "var roles: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/userid",
                "title" : "var userId: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/userrole\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/userrole\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/userrole\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/userrole",
            "title" : "UserRole",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrolerequest\/init(userid:roles:)",
                "title" : "init(userId: Int, roles: [Roles])",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/userrolerequest\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/userrolerequest\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/userrolerequest\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/userrolerequest\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/userrolerequest",
            "title" : "UserRoleRequest",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/safedecodable\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/safedecodable\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/safedecodable",
            "title" : "SafeDecodable",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/assistanteventmodel",
            "title" : "AssistantEventModel",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatconfig\/init(asyncconfig:token:ssohost:platformhost:fileserver:podspacefileserveraddress:mapapikey:mapserver:typecode:enablecache:cachetimestampinsec:msgpriority:msgttl:httprequesttimeout:actualtiminglog:wsconnectionwaittime:capturelogsonsentry:max-2sgnf",
                "title" : "init(asyncConfig: AsyncConfig, token: String, ssoHost: String, platformHost: String, fileServer: String, podSpaceFileServerAddress: String, mapApiKey: String?, mapServer: String, typeCode: String, enableCache: Bool, cacheTimeStampInSec: Int, msgPriority: Int, msgTTL: Int, httpRequestTimeout: Int, actualTimingLog: Bool, wsConnectionWaitTime: Double, captureLogsOnSentry: Bool, maxReconnectTimeInterval: Int, localImageCustomPath: URL?, localFileCustomPath: URL?, deviecLimitationSpaceMB: Int64, getDeviceIdFromToken: Bool, isDebuggingLogEnabled: Bool, enableNotificationLogObserver: Bool)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chatconfig",
            "title" : "ChatConfig",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/init(code:errorcode:message:userinfo:rawerror:content:)",
                "title" : "init(code: ChatErrorCodes, errorCode: Int?, message: String?, userInfo: [String : Any]?, rawError: Error?, content: String?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/banerror",
                "title" : "var banError: BanError?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/code",
                "title" : "var code: ChatErrorCodes",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/content",
                "title" : "var content: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/errorcode",
                "title" : "var errorCode: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/haserror",
                "title" : "var hasError: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/message",
                "title" : "var message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/rawerror",
                "title" : "var rawError: Error?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterror\/userinfo",
                "title" : "var userInfo: [String : Any]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chaterror",
            "title" : "ChatError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatresponse\/cacheresponse",
                "title" : "var cacheResponse: Any?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatresponse\/contentcount",
                "title" : "var contentCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatresponse\/error",
                "title" : "var error: ChatError?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatresponse\/result",
                "title" : "var result: Any?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatresponse\/uniqueid",
                "title" : "var uniqueId: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chatresponse",
            "title" : "ChatResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cordinate\/init(lat:lng:)",
                "title" : "init(lat: Double, lng: Double)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cordinate\/lat",
                "title" : "let lat: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/cordinate\/lng",
                "title" : "let lng: Double",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/cordinate",
            "title" : "Cordinate",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/distance\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/distance\/text",
                "title" : "var text: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/distance\/value",
                "title" : "var value: Double?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/distance",
            "title" : "Distance",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/downloadfileprogress\/bytesrecivied",
                "title" : "var bytesRecivied: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/downloadfileprogress\/percent",
                "title" : "var percent: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/downloadfileprogress\/totalsize",
                "title" : "var totalSize: Int64",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/downloadfileprogress",
            "title" : "DownloadFileProgress",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/duration\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/duration\/text",
                "title" : "var text: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/duration\/value",
                "title" : "var value: Double?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/duration",
            "title" : "Duration",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemodel\/hashcode",
                "title" : "var hashCode: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemodel\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemodel\/size",
                "title" : "var size: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/filemodel\/type",
                "title" : "var type: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/filemodel",
            "title" : "FileModel",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileowner\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileowner\/avatar",
                "title" : "let avatar: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileowner\/name",
                "title" : "let name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileowner\/roles",
                "title" : "let roles: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileowner\/ssoid",
                "title" : "let ssoId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileowner\/username",
                "title" : "let username: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/fileowner",
            "title" : "FileOwner",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/actualheight",
                "title" : "var actualHeight: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/actualwidth",
                "title" : "var actualWidth: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/hashcode",
                "title" : "var hashCode: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/height",
                "title" : "var height: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/size",
                "title" : "var size: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagemodel\/width",
                "title" : "var width: Int?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/imagemodel",
            "title" : "ImageModel",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leg\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leg\/distance",
                "title" : "var distance: Distance?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leg\/duration",
                "title" : "var duration: Duration?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leg\/steps",
                "title" : "var steps: [Step]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/leg\/summary",
                "title" : "var summary: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/leg",
            "title" : "Leg",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/logresult\/init(json:receive:)",
                "title" : "init(json: String, receive: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/logresult\/json",
                "title" : "var json: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/logresult\/receive",
                "title" : "var receive: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/logresult",
            "title" : "LogResult",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mutethreadresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/mutethreadresponse\/threadid",
                "title" : "var threadId: Int?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/mutethreadresponse",
            "title" : "MuteThreadResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest\/init(messageid:ownerid:)",
                "title" : "init(messageId: Int, ownerId: Int)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest\/messageid",
                "title" : "let messageId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest\/ownerid",
                "title" : "let ownerId: Int",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/notifydeliveredmessagerequest",
            "title" : "NotifyDeliveredMessageRequest",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/overviewpolyline\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/overviewpolyline\/points",
                "title" : "var points: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/overviewpolyline",
            "title" : "OverviewPolyline",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinthreadresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/pinthreadresponse\/threadid",
                "title" : "var threadId: Int?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/pinthreadresponse",
            "title" : "PinThreadResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/error",
                "title" : "let error: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/message",
                "title" : "let message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/path",
                "title" : "let path: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/reference",
                "title" : "let reference: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/result",
                "title" : "let result: UploadFileResponse?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/status",
                "title" : "let status: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse\/timestamp",
                "title" : "let timestamp: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/podspacefileuploadresponse",
            "title" : "PodspaceFileUploadResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/publicthreadnameavailableresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/publicthreadnameavailableresponse\/name",
                "title" : "var name: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/publicthreadnameavailableresponse",
            "title" : "PublicThreadNameAvailableResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/route\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/route\/legs",
                "title" : "var legs: [Leg]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/route\/overviewpolyline",
                "title" : "var overviewPolyline: OverviewPolyline?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/route",
            "title" : "Route",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/init(field:is:has:gt:gte:lt:lte:and:or:not:isnumber:)",
                "title" : "init(field: String?, is: String?, has: String?, gt: String?, gte: String?, lt: String?, lte: String?, and: [SearchMetadataCriteria]?, or: [SearchMetadataCriteria]?, not: [SearchMetadataCriteria]?, isNumber: Bool?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/and",
                "title" : "var and: [SearchMetadataCriteria]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/field",
                "title" : "var field: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/gt",
                "title" : "var gt: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/gte",
                "title" : "var gte: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/has",
                "title" : "var has: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/is",
                "title" : "var `is`: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/isnumber",
                "title" : "var isNumber: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/lt",
                "title" : "var lt: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/lte",
                "title" : "var lte: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/not",
                "title" : "var not: [SearchMetadataCriteria]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/or",
                "title" : "var or: [SearchMetadataCriteria]?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/searchmetadatacriteria",
            "title" : "SearchMetadataCriteria",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendasyncmessagevo\/init(content:ttl:peername:priority:pushmsgtype:)",
                "title" : "init(content: String, ttl: Int, peerName: String, priority: Int, pushMsgType: AsyncMessageTypes?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendasyncmessagevo\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/sendasyncmessagevo\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/sendasyncmessagevo\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/sendasyncmessagevo\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/sendasyncmessagevo",
            "title" : "SendAsyncMessageVO",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/sendchatmessagevo\/init(type:token:content:messagetype:metadata:repliedto:systemmetadata:subjectid:tokenissuer:typecode:uniqueid:)",
                "title" : "init(type: Int, token: String, content: String?, messageType: Int?, metadata: String?, repliedTo: Int?, systemMetadata: String?, subjectId: Int?, tokenIssuer: Int, typeCode: String?, uniqueId: String?)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/sendchatmessagevo\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/sendchatmessagevo\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/sendchatmessagevo\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/sendchatmessagevo",
            "title" : "SendChatMessageVO",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/distance",
                "title" : "var distance: Distance?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/duration",
                "title" : "var duration: Duration?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/instruction",
                "title" : "var instruction: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/maneuver",
                "title" : "var maneuver: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/rotaryname",
                "title" : "var rotaryName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/step\/startlocation",
                "title" : "var startLocation: [Double]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/step",
            "title" : "Step",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/coreuserid",
                "title" : "let coreUserId: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/smt",
                "title" : "let smt: SMT",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/ssoid",
                "title" : "let ssoId: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/user",
                "title" : "let user: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/userid",
                "title" : "let userId: Int",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/systemeventmessagemodel",
            "title" : "SystemEventMessageModel",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/init(id:name:owner:active:tagparticipants:)",
                "title" : "init(id: Int, name: String, owner: Participant, active: Bool, tagParticipants: [TagParticipant]?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/active",
                "title" : "var active: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/id",
                "title" : "var id: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/owner",
                "title" : "var owner: Participant",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tag\/tagparticipants",
                "title" : "var tagParticipants: [TagParticipant]?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/tag\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/tag\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/tag\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/tag",
            "title" : "Tag",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tageventmodel\/init(tag:tagparticipants:type:)",
                "title" : "init(tag: Tag?, tagParticipants: [TagParticipant]?, type: TagEventType)",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/tageventmodel",
            "title" : "TagEventModel",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/init(id:active:tagid:threadid:conversation:)",
                "title" : "init(id: Int?, active: Bool?, tagId: Int?, threadId: Int?, conversation: Conversation?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/active",
                "title" : "let active: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/conversation",
                "title" : "let conversation: Conversation?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/id",
                "title" : "let id: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/tagid",
                "title" : "let tagId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/threadid",
                "title" : "let threadId: Int?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/tagparticipant\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/tagparticipant",
            "title" : "TagParticipant",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfileprogress\/bytessend",
                "title" : "let bytesSend: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfileprogress\/percent",
                "title" : "let percent: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/uploadfileprogress\/totalsize",
                "title" : "let totalSize: Int64",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/uploadfileprogress",
            "title" : "UploadFileProgress",
            "type" : "struct"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/cacheresponsetype",
            "title" : "CacheResponseType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/completiontype",
            "title" : "CompletionType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/completiontypewithoutuniqueid",
            "title" : "CompletionTypeWithoutUniqueId",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/downloadfilecompletiontype",
            "title" : "DownloadFileCompletionType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/downloadimagecompletiontype",
            "title" : "DownloadImageCompletionType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/downloadprogresstype",
            "title" : "DownloadProgressType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/ondeliverytype",
            "title" : "OnDeliveryType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/onseentype",
            "title" : "OnSeenType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/onsenttype",
            "title" : "OnSentType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/paginationcacheresponsetype",
            "title" : "PaginationCacheResponseType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/paginationcompletiontype",
            "title" : "PaginationCompletionType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/unmutethreadresponse",
            "title" : "UnMuteThreadResponse",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/unpinthreadresponse",
            "title" : "UnPinThreadResponse",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/uniqueidresulttype",
            "title" : "UniqueIdResultType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/uniqueidsresulttype",
            "title" : "UniqueIdsResultType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/uploadcompletiontype",
            "title" : "UploadCompletionType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/fanappodchatsdk\/uploadfileprogresstype",
            "title" : "UploadFileProgressType",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype\/block_assistant",
                "title" : "case BLOCK_ASSISTANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype\/deactive_assistants",
                "title" : "case DEACTIVE_ASSISTANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype\/register_assistant",
                "title" : "case REGISTER_ASSISTANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype\/unblock_assistant",
                "title" : "case UNBLOCK_ASSISTANT",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/assistanteventtype",
            "title" : "AssistantEventType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/boteventtypes\/bot_message(_:)",
                "title" : "case BOT_MESSAGE(String?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/boteventtypes\/create_bot(_:)",
                "title" : "case CREATE_BOT(Bot)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/boteventtypes\/create_bot_command(_:)",
                "title" : "case CREATE_BOT_COMMAND(BotInfo)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/boteventtypes\/remove_bot_command(_:)",
                "title" : "case REMOVE_BOT_COMMAND(BotInfo)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/boteventtypes\/start_bot(_:)",
                "title" : "case START_BOT(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/boteventtypes\/stop_bot(_:)",
                "title" : "case STOP_BOT(String)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/boteventtypes",
            "title" : "BotEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/async_error",
                "title" : "case ASYNC_ERROR",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/error_raedy_chat",
                "title" : "case ERROR_RAEDY_CHAT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/export_error",
                "title" : "case EXPORT_ERROR",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/network_error",
                "title" : "case NETWORK_ERROR",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/out_of_storage",
                "title" : "case OUT_OF_STORAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/undefined",
                "title" : "case UNDEFINED",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chaterrorcodes",
            "title" : "ChatErrorCodes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/assistant(_:)",
                "title" : "case Assistant(AssistantEventModel)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/bot(_:)",
                "title" : "case Bot(BotEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/contact(_:)",
                "title" : "case Contact(ContactEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/file(_:)",
                "title" : "case File(FileEventType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/message(_:)",
                "title" : "case Message(MessageEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/system(_:)",
                "title" : "case System(SystemEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/tag(_:)",
                "title" : "case Tag(TagEventModel)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/thread(_:)",
                "title" : "case Thread(ThreadEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chateventtype\/user(_:)",
                "title" : "case User(UserEventTypes)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chateventtype",
            "title" : "ChatEventType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/add_participant",
                "title" : "case ADD_PARTICIPANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/add_tag_participants",
                "title" : "case ADD_TAG_PARTICIPANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/all_unread_message_count",
                "title" : "case ALL_UNREAD_MESSAGE_COUNT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/block",
                "title" : "case BLOCK",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/blocked_assistnts",
                "title" : "case BLOCKED_ASSISTNTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/block_assistant",
                "title" : "case BLOCK_ASSISTANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/bot_message",
                "title" : "case BOT_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/change_thread_type",
                "title" : "case CHANGE_THREAD_TYPE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/change_type",
                "title" : "case CHANGE_TYPE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/clear_history",
                "title" : "case CLEAR_HISTORY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/close_thread",
                "title" : "case CLOSE_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/contacts_last_seen",
                "title" : "case CONTACTS_LAST_SEEN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/contact_synced",
                "title" : "case CONTACT_SYNCED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/create_bot",
                "title" : "case CREATE_BOT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/create_tag",
                "title" : "case CREATE_TAG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/create_thread",
                "title" : "case CREATE_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/deacticve_assistant",
                "title" : "case DEACTICVE_ASSISTANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/define_bot_command",
                "title" : "case DEFINE_BOT_COMMAND",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/delete_message",
                "title" : "case DELETE_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/delete_tag",
                "title" : "case DELETE_TAG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/delete_thread",
                "title" : "case DELETE_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/delivery",
                "title" : "case DELIVERY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/edit_message",
                "title" : "case EDIT_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/edit_tag",
                "title" : "case EDIT_TAG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/error",
                "title" : "case ERROR",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/export_chats",
                "title" : "case EXPORT_CHATS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/forward_message",
                "title" : "case FORWARD_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_assistants",
                "title" : "case GET_ASSISTANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_assistant_history",
                "title" : "case GET_ASSISTANT_HISTORY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_blocked",
                "title" : "case GET_BLOCKED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_contacts",
                "title" : "case GET_CONTACTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_current_user_roles",
                "title" : "case GET_CURRENT_USER_ROLES",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_history",
                "title" : "case GET_HISTORY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_message_delevery_participants",
                "title" : "case GET_MESSAGE_DELEVERY_PARTICIPANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_message_seen_participants",
                "title" : "case GET_MESSAGE_SEEN_PARTICIPANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_not_seen_duration",
                "title" : "case GET_NOT_SEEN_DURATION",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_report_reasons",
                "title" : "case GET_REPORT_REASONS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_status",
                "title" : "case GET_STATUS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_tag_participants",
                "title" : "case GET_TAG_PARTICIPANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_threads",
                "title" : "case GET_THREADS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/get_user_bots",
                "title" : "case GET_USER_BOTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/is_name_available",
                "title" : "case IS_NAME_AVAILABLE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/join_thread",
                "title" : "case JOIN_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/last_seen_updated",
                "title" : "case LAST_SEEN_UPDATED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/leave_thread",
                "title" : "case LEAVE_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/logout",
                "title" : "case LOGOUT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/message",
                "title" : "case MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/mute_thread",
                "title" : "case MUTE_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/mutual_groups",
                "title" : "case MUTUAL_GROUPS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/ping",
                "title" : "case PING",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/pin_message",
                "title" : "case PIN_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/pin_thread",
                "title" : "case PIN_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/register_assistant",
                "title" : "case REGISTER_ASSISTANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/relation_info",
                "title" : "case RELATION_INFO",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/removed_from_thread",
                "title" : "case REMOVED_FROM_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/remove_bot_commands",
                "title" : "case REMOVE_BOT_COMMANDS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/remove_participant",
                "title" : "case REMOVE_PARTICIPANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/remove_role_from_user",
                "title" : "case REMOVE_ROLE_FROM_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/remove_tag_participants",
                "title" : "case REMOVE_TAG_PARTICIPANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/rename",
                "title" : "case RENAME",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/report_message",
                "title" : "case REPORT_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/report_thread",
                "title" : "case REPORT_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/report_user",
                "title" : "case REPORT_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/seen",
                "title" : "case SEEN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/sent",
                "title" : "case SENT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/set_profile",
                "title" : "case SET_PROFILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/set_rule_to_user",
                "title" : "case SET_RULE_TO_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/spam_pv_thread",
                "title" : "case SPAM_PV_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/start_bot",
                "title" : "case START_BOT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/status_ping",
                "title" : "case STATUS_PING",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/stop_bot",
                "title" : "case STOP_BOT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/system_message",
                "title" : "case SYSTEM_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/tag_list",
                "title" : "case TAG_LIST",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/thread_info_updated",
                "title" : "case THREAD_INFO_UPDATED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/thread_participants",
                "title" : "case THREAD_PARTICIPANTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/unblock",
                "title" : "case UNBLOCK",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/unblock_assistant",
                "title" : "case UNBLOCK_ASSISTANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/unknown",
                "title" : "case UNKNOWN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/unmute_thread",
                "title" : "case UNMUTE_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/unpin_message",
                "title" : "case UNPIN_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/unpin_thread",
                "title" : "case UNPIN_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/update_thread_info",
                "title" : "case UPDATE_THREAD_INFO",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/user_info",
                "title" : "case USER_INFO",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/user_status",
                "title" : "case USER_STATUS",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/init(from:)-9ix5y",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/init(from:)-9jlxf",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chatmessagevotypes",
            "title" : "ChatMessageVOTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/async_ready",
                "title" : "case ASYNC_READY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/chat_ready",
                "title" : "case CHAT_READY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/closed",
                "title" : "case CLOSED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/connected",
                "title" : "case CONNECTED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/connecting",
                "title" : "case CONNECTING",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatstate\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatstate\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/chatstate\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/chatstate\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/chatstate",
            "title" : "ChatState",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contacteventtypes\/blocked(_:id:)",
                "title" : "case BLOCKED(BlockedContact, id: Int?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/contacteventtypes\/contacts_last_seen(_:)",
                "title" : "case CONTACTS_LAST_SEEN([UserLastSeenDuration])",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/contacteventtypes",
            "title" : "ContactEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/downloauploadaction\/cancel",
                "title" : "case cancel",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/downloauploadaction\/resume",
                "title" : "case resume",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/downloauploadaction\/suspend",
                "title" : "case suspend",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/downloauploadaction\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/downloauploadaction\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/downloauploadaction",
            "title" : "DownloaUploadAction",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/downloaded(_:)",
                "title" : "case DOWNLOADED(FileRequest)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/downloading(uniqueid:)",
                "title" : "case DOWNLOADING(uniqueId: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/download_error(_:)",
                "title" : "case DOWNLOAD_ERROR(ChatError)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/image_downloaded(_:)",
                "title" : "case IMAGE_DOWNLOADED(ImageRequest)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/not_started",
                "title" : "case NOT_STARTED",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/uploaded(_:)",
                "title" : "case UPLOADED(UploadFileRequest)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/uploading(uniqueid:)",
                "title" : "case UPLOADING(uniqueId: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/fileeventtype\/upload_error(_:)",
                "title" : "case UPLOAD_ERROR(ChatError)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/fileeventtype",
            "title" : "FileEventType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/actual",
                "title" : "case ACTUAL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/larg",
                "title" : "case LARG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/medium",
                "title" : "case MEDIUM",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/small",
                "title" : "case SMALL",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/imagesize\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/imagesize\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/imagesize\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/imagesize\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/imagesize\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/imagesize\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/imagesize\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/imagesize",
            "title" : "ImageSize",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/cellphone_number",
                "title" : "case CELLPHONE_NUMBER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/contact_id",
                "title" : "case CONTACT_ID",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/core_user_id",
                "title" : "case CORE_USER_ID",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/sso_id",
                "title" : "case SSO_ID",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/unknown",
                "title" : "case UNKNOWN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/username",
                "title" : "case USERNAME",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/user_id",
                "title" : "case USER_ID",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/init(from:)-18pmy",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/init(from:)-1epqv",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/inviteetypes\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/inviteetypes",
            "title" : "InviteeTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes\/message_delete(_:)",
                "title" : "case MESSAGE_DELETE(Message)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes\/message_delivery(_:)",
                "title" : "case MESSAGE_DELIVERY(Message)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes\/message_edit(_:)",
                "title" : "case MESSAGE_EDIT(Message)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes\/message_new(_:)",
                "title" : "case MESSAGE_NEW(Message)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes\/message_seen(_:)",
                "title" : "case MESSAGE_SEEN(Message)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes\/message_send(_:)",
                "title" : "case MESSAGE_SEND(Message)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messageeventtypes",
            "title" : "MessageEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/end_call",
                "title" : "case END_CALL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/file",
                "title" : "case FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/link",
                "title" : "case LINK",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/location",
                "title" : "case LOCATION",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/picture",
                "title" : "case PICTURE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/pod_space_file",
                "title" : "case POD_SPACE_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/pod_space_picture",
                "title" : "case POD_SPACE_PICTURE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/pod_space_sound",
                "title" : "case POD_SPACE_SOUND",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/pod_space_video",
                "title" : "case POD_SPACE_VIDEO",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/pod_space_voice",
                "title" : "case POD_SPACE_VOICE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/sound",
                "title" : "case SOUND",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/start_call",
                "title" : "case START_CALL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/sticker",
                "title" : "case STICKER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/text",
                "title" : "case TEXT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/video",
                "title" : "case VIDEO",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/voice",
                "title" : "case VOICE",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/messagetype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/messagetype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/messagetype",
            "title" : "MessageType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/ordering\/ascending",
                "title" : "case ascending",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/ordering\/descending",
                "title" : "case descending",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/ordering\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/ordering\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/ordering\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/ordering\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/ordering\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/ordering\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/ordering",
            "title" : "Ordering",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/add",
                "title" : "case Add",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/remove",
                "title" : "case Remove",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/roleoperations\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/roleoperations",
            "title" : "RoleOperations",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/add_new_user",
                "title" : "case ADD_NEW_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/add_rule_to_user",
                "title" : "case ADD_RULE_TO_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/change_thread_info",
                "title" : "case CHANGE_THREAD_INFO",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/delete_message_of_others",
                "title" : "case DELETE_MESSAGE_OF_OTHERS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/edit_message_of_others",
                "title" : "case EDIT_MESSAGE_OF_OTHERS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/edit_thread",
                "title" : "case EDIT_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/ownership",
                "title" : "case OWNERSHIP",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/post_channel_message",
                "title" : "case POST_CHANNEL_MESSAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/read_thread",
                "title" : "case READ_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/remove_role_from_user",
                "title" : "case REMOVE_ROLE_FROM_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/remove_user",
                "title" : "case REMOVE_USER",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/thread_admin",
                "title" : "case THREAD_ADMIN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/unknown",
                "title" : "case UNKNOWN",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/roles\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/init(from:)-xzq5",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/roles\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/roles\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/roles\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/init(from:)-5wc2u",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/roles\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/roles\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/roles",
            "title" : "Roles",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/add_contacts",
                "title" : "case ADD_CONTACTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/drive_download_file",
                "title" : "case DRIVE_DOWNLOAD_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/drive_download_image",
                "title" : "case DRIVE_DOWNLOAD_IMAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/drive_upload_file_from_url",
                "title" : "case DRIVE_UPLOAD_FILE_FROM_URL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/files",
                "title" : "case FILES",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/get_file",
                "title" : "case GET_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/get_image",
                "title" : "case GET_IMAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/images",
                "title" : "case IMAGES",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/map_reverse",
                "title" : "case MAP_REVERSE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/map_routing",
                "title" : "case MAP_ROUTING",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/map_search",
                "title" : "case MAP_SEARCH",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/map_static_image",
                "title" : "case MAP_STATIC_IMAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/podspace_public_upload_file",
                "title" : "case PODSPACE_PUBLIC_UPLOAD_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/podspace_public_upload_image",
                "title" : "case PODSPACE_PUBLIC_UPLOAD_IMAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/podspace_upload_file",
                "title" : "case PODSPACE_UPLOAD_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/podspace_upload_image",
                "title" : "case PODSPACE_UPLOAD_IMAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/remove_contacts",
                "title" : "case REMOVE_CONTACTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/search_contacts",
                "title" : "case SEARCH_CONTACTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/sso_devices",
                "title" : "case SSO_DEVICES",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/sso_generate_key",
                "title" : "case SSO_GENERATE_KEY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/sso_get_key",
                "title" : "case SSO_GET_KEY",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/update_contacts",
                "title" : "case UPDATE_CONTACTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/upload_file",
                "title" : "case UPLOAD_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/upload_file_with_user_group",
                "title" : "case UPLOAD_FILE_WITH_USER_GROUP",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/upload_image",
                "title" : "case UPLOAD_IMAGE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/upload_image_with_user_group",
                "title" : "case UPLOAD_IMAGE_WITH_USER_GROUP",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/routes\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/routes\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/routes\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/routes\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/routes\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/routes\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/routes",
            "title" : "Routes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/is_typing",
                "title" : "case IS_TYPING",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/record_voice",
                "title" : "case RECORD_VOICE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/server_time",
                "title" : "case SERVER_TIME",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/unknown",
                "title" : "case UNKNOWN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/upload_file",
                "title" : "case UPLOAD_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/upload_picture",
                "title" : "case UPLOAD_PICTURE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/upload_sound",
                "title" : "case UPLOAD_SOUND",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/upload_video",
                "title" : "case UPLOAD_VIDEO",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/smt\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/init(from:)-7a04p",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/smt\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/smt\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/smt\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/init(from:)-80cua",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/smt\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/smt\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/smt",
            "title" : "SMT",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/is_typing",
                "title" : "case IS_TYPING",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/record_voice",
                "title" : "case RECORD_VOICE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/unknown",
                "title" : "case UNKNOWN",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/upload_file",
                "title" : "case UPLOAD_FILE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/upload_picture",
                "title" : "case UPLOAD_PICTURE",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/upload_sound",
                "title" : "case UPLOAD_SOUND",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/upload_video",
                "title" : "case UPLOAD_VIDEO",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/init(from:)-64l8o",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/init(from:)-50q77",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/signalmessagetype",
            "title" : "SignalMessageType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/chat",
                "title" : "case CHAT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/contacts",
                "title" : "case CONTACTS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/contact_id",
                "title" : "case CONTACT_ID",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/thread",
                "title" : "case THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/thread_id",
                "title" : "case THREAD_ID",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/statuspingtype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/statuspingtype",
            "title" : "StatusPingType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventtypes\/server_time(_:)",
                "title" : "case SERVER_TIME(Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/systemeventtypes\/system_message(message:time:id:)",
                "title" : "case SYSTEM_MESSAGE(message: SystemEventMessageModel, time: Int, id: Int?)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/systemeventtypes",
            "title" : "SystemEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/add_tag_participant",
                "title" : "case ADD_TAG_PARTICIPANT",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/create_tag",
                "title" : "case CREATE_TAG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/delete_tag",
                "title" : "case DELETE_TAG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/edit_tag",
                "title" : "case EDIT_TAG",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/remove_tag_participant",
                "title" : "case REMOVE_TAG_PARTICIPANT",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/tageventtype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/tageventtype",
            "title" : "TagEventType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/message_pin(threadid:_:)",
                "title" : "case MESSAGE_PIN(threadId: Int?, PinUnpinMessage)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/message_unpin(threadid:_:)",
                "title" : "case MESSAGE_UNPIN(threadId: Int?, PinUnpinMessage)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/threads_list_change(_:)",
                "title" : "case THREADS_LIST_CHANGE([Conversation])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_add_participants(thread:_:)",
                "title" : "case THREAD_ADD_PARTICIPANTS(thread: Conversation, [Participant]?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_closed(threadid:)",
                "title" : "case THREAD_CLOSED(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_deleted(threadid:participant:)",
                "title" : "case THREAD_DELETED(threadId: Int, participant: Participant?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_info_updated(_:)",
                "title" : "case THREAD_INFO_UPDATED(Conversation)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_last_activity_time(time:threadid:)",
                "title" : "case THREAD_LAST_ACTIVITY_TIME(time: Int, threadId: Int?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_leave_participant(_:)",
                "title" : "case THREAD_LEAVE_PARTICIPANT(User)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_leave_saftly_failed(threadid:)",
                "title" : "case THREAD_LEAVE_SAFTLY_FAILED(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_mute(threadid:)",
                "title" : "case THREAD_MUTE(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_new(_:)",
                "title" : "case THREAD_NEW(Conversation)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_participants_list_change(threadid:_:)",
                "title" : "case THREAD_PARTICIPANTS_LIST_CHANGE(threadId: Int?, [Participant])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_pin(threadid:)",
                "title" : "case THREAD_PIN(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_removed_from(threadid:)",
                "title" : "case THREAD_REMOVED_FROM(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_remove_participants(_:)",
                "title" : "case THREAD_REMOVE_PARTICIPANTS([Participant])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_unmute(threadid:)",
                "title" : "case THREAD_UNMUTE(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_unpin(threadid:)",
                "title" : "case THREAD_UNPIN(threadId: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_unread_count_updated(threadid:count:)",
                "title" : "case THREAD_UNREAD_COUNT_UPDATED(threadId: Int, count: Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes\/thread_user_role(threadid:roles:)",
                "title" : "case THREAD_USER_ROLE(threadId: Int, roles: [UserRole])",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/threadeventtypes",
            "title" : "ThreadEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/channel",
                "title" : "case CHANNEL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/channel_group",
                "title" : "case CHANNEL_GROUP",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/normal",
                "title" : "case NORMAL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/notification_channel",
                "title" : "case NOTIFICATION_CHANNEL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/owner_group",
                "title" : "case OWNER_GROUP",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/public_channel",
                "title" : "case PUBLIC_CHANNEL",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/public_group",
                "title" : "case PUBLIC_GROUP",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/public_thread",
                "title" : "case PUBLIC_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/self_thread",
                "title" : "case SELF_THREAD",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/unknown",
                "title" : "case UNKNOWN",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/init(rawvalue:)",
                "title" : "init?(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/init(from:)-4sk2z",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/convertcodabletostring()",
                    "title" : "func convertCodableToString() -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/init(from:)-6dhzb",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/fanappodchatsdk\/threadtypes\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/threadtypes",
            "title" : "ThreadTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/fanappodchatsdk\/usereventtypes\/roles(_:id:)",
                "title" : "case ROLES([Roles], id: Int?)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/fanappodchatsdk\/usereventtypes",
            "title" : "UserEventTypes",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/fanappodchatsdk",
        "title" : "FanapPodChatSDK",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 0
  }
}