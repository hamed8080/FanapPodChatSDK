{
  "abstract" : [
    {
      "text" : "Managing threads create P2P, Group, Channel or delete edit and so many more.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingThreads"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "FanapPodChatSDK"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Managing Threads"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Get-Threads",
          "level" : 3,
          "text" : "Get Threads",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Get threads list. Call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/getThreads(_:completion:cacheResponse:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "You can send request in pagination mode and set offset.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.getThreads(init(offset: 50)) { threads, uniqueId, pagination, error in",
            "    if error == nil{",
            "        \/\/ Write your code",
            "    }",
            "}cacheResponse{ threads, uniqueId, pagination, error in",
            "    if threads = threads {",
            "        \/\/ Write your code",
            "    } ",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "For retriving data witouth calling network you could use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/CacheFactory\/get(useCache:cacheType:completion:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "It won’t work unless you set ",
              "type" : "text"
            },
            {
              "code" : "enableCache",
              "type" : "codeVoice"
            },
            {
              "text" : " to true in configuration.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = ThreadsRequest(count:50, offset: 0)",
            "CacheFactory.get(useCache: true, cacheType: .GET_THREADS(req)) { response in",
            "    if let threads = response.cacheResponse as? [Conversation]{",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-a-thread",
          "level" : 3,
          "text" : "Create a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For creating a thread use method with a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/CreateThreadRequest",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/createThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Each thread contains a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Conversation\/type",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " which determine if the thread is P2P, Group, Channel or e.g.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let invitee = Invitee(id: \"\\(123456)\", idType: .CONTACT_ID)",
            "Chat.sharedInstance.createThread(.init(invitees: [invitee], type: .NORMAL)) { thread, unqiueId, error in",
            "    if let thread = thread {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-Thread-with-message",
          "level" : 3,
          "text" : "Create Thread with message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Createing a thread with a message with ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/createThreadWithMessage(_:uniqueIdResult:onSent:onDelivery:onSeen:completion:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let invitee = Invitee(id: \"\\(123456)\", idType: .CONTACT_ID)",
            "let textMessage = CreateThreadMessage(text: \"Hello\")",
            "let req = CreateThreadWithMessage(invitees:[invitee], title: \"\", message: textMessage)",
            "Chat.sharedInstance.createThreadWithMessage(req) { uniqueId in",
            "    \/\/ Write your code",
            "} onSent: { sentResponse, uniqueId, error in",
            "    \/\/ Write your code",
            "} onDelivery: { deliveryResponse, uniqueId, error in",
            "    \/\/ Write your code",
            "} onSeen: { seenResponse, uniqueId, error in",
            "    \/\/ Write your code",
            "} completion: { thread, uniqueId, error in",
            "    \/\/ Write your code",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-a-thread-with-message-and-upload-a-file",
          "level" : 3,
          "text" : "Create a thread with message and upload a file",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For creating a thread with file use method with a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/CreateThreadRequest",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/createThreadWithFileMessage(_:textMessage:uploadFile:uploadProgress:onSent:onSeen:onDeliver:createThreadCompletion:uploadUniqueIdResult:messageUniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Most of the closures here are optional if you don’t need one of them just don’t pass it as a parameter.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "let invitee = Invitee(id: \"\\(123456)\", idType: .CONTACT_ID)",
            "let req = CreateThreadRequest(invitees:[invitee], title: \"\")",
            "let textMessage = SendTextMessageRequest(textMessage: \"Hello\", messageType: .POD_SPACE_PICTURE)",
            "let uploadReq = UploadFileRequest(data: imageData)",
            "Chat.sharedInstance.createThreadWithFileMessage(req, textMessage: textMessage, uploadFile: uploadReq) { uploadProgress, error in",
            "    \/\/ Write your code",
            "} onSent: { sentReponse, uniqueId, error in",
            "    \/\/ Write your code",
            "} onSeen: { seenResponse, uniqueId, error in",
            "    \/\/ Write your code",
            "} onDeliver: { deliverResponse, uniqueId, error in",
            "    \/\/ Write your code",
            "} createThreadCompletion: { thread, uniqueId, error in",
            "    \/\/ Write your code",
            "} uploadUniqueIdResult: { uniqueId in",
            "    \/\/ Write your code",
            "} messageUniqueIdResult: { uniqueId in",
            "    \/\/ Write your code",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Add-Participant-or-Participants",
          "level" : 3,
          "text" : "Add Participant or Participants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Add participants with contactIds, userName or coreUserId ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/addParticipant(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Each thread contains a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Conversation\/type",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " which determine if the thread is P2P, Group, Channel or e.g.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = AddParticipantRequest(contactIds: [123456], threadId: 7890)",
            "Chat.sharedInstance.addParticipant(req) { thread, uniqueId, error in",
            "    if let thread = thread { ",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Delete-Participants",
          "level" : 3,
          "text" : "Delete Participants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Delete participants from a thread ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/removeParticipants(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.removeParticipants(.init(participantId: 123456, threadId: 456789)) { deletedParticipants, uniqueId, error in",
            "    if let thread = thread {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Join-To-a-thread",
          "level" : 3,
          "text" : "Join To a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Join to a public thread ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/joinThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.joinThread(.init(threadName: \"MyPublicThreadName\")) { thread, uniqueId, error in",
            "    if let thread = thread {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Close-a-thread",
          "level" : 3,
          "text" : "Close a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Admin of a thread can close a thread to prevent participants send a message. The Thread must be one of types: ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/CHANNEL",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/CHANNEL_GROUP",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",  ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/NORMAL",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Use mehod ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/closeThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like below:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Keep in mine ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/NORMAL",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " must be a group, not a P2P thread.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "Chat.sharedInstance.closeThread(.init(threadId: 123456)) { closedThreadId, uniqueId, error in",
            "    if let closedThreadId = closedThreadId {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Spam-a-thread",
          "level" : 3,
          "text" : "Spam a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For marking a thread as an spam you sould use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/spamPvThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "With marking a thread as spam three events occur:",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An event of the creator of the thread got blocked.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An event for leaving the thread.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An event that mentions that the content of the thread was deleted.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "code" : [
            "Chat.sharedInstance.spamPvThread(.init(threadId: 123456)) { blockedContact, uniqueId, error in",
            "    if let blockedContact = blockedContact {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Update-a-thread",
          "level" : 3,
          "text" : "Update a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For updating title, description, image of a thread use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/updateThreadInfo(_:uniqueIdResult:uploadProgress:completion:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = UpdateThreadInfoRequest(description: \"News about Tech\", threadId: 123456, title: \"Tech News\")",
            "Chat.sharedInstance.updateThreadInfo(req) { thread, uniqueId, error in",
            "    if let thread = thread {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Leave-a-thread",
          "level" : 3,
          "text" : "Leave a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "for leaving a thread use method  ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/leaveThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If set ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/LeaveThreadRequest\/clearHistory",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " to ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " all content of that thread will be deleted for the user and even after joining again those content is not availanble.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "Chat.sharedInstance.leaveThread(.init(threadId: 123456, clearHistory: true)) { user, uniqueId, error in",
            "    if let user = user {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Replace-admin-and-leave-a-thread",
          "level" : 3,
          "text" : "Replace admin and leave a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you are the only admin of a thread and you have decided to leave the thread it’s better to find a person as an admin you should call method,  ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/leaveThreadSaftly(_:completion:newAdminCompletion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = SafeLeaveThreadRequest(threadId: 123456, participantId: 4567890)",
            "Chat.sharedInstance.leaveThreadSaftly(req) { user, uniqueId, error in",
            "    if let user = user {",
            "        \/\/ Write your code",
            "    }",
            "}newAdminCompletion{ userRoles, uniqueId, error in",
            "    \/\/ Write your code",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Delete-a-thread",
          "level" : 3,
          "text" : "Delete a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you have a ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Roles\/OWNERSHIP",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " access for this thread you could completely delete the thread. ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/deleteThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Following things will happen if you delete a thread:",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "All members are deleted from the channel or group and will receive a message about it.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "All members of the thread will receive a message that contains who deleted the thread.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "code" : [
            "Chat.sharedInstance.deleteThread(.init(threadId: 123456)) { threadId, unqiueId, error in",
            "    if let threadId = threadId {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "All-threadsIds",
          "level" : 3,
          "text" : "All threads(Ids)",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Getting the list of all threads by itself is not useful, if you set the summary of this request to true you will receive only the list of thread ids  ",
              "type" : "text"
            },
            {
              "code" : "[Int]",
              "type" : "codeVoice"
            },
            {
              "text" : "  so the only filed that will set is ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Conversation\/id",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.getAllThreads(.init(summary: true)) { threadIds, unqiueId, error in",
            "    if let threadIds = threadIds {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Public-thread-name",
          "level" : 3,
          "text" : "Public thread name",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Before creating a public thread be sure that thread name is free and it’s not occupied.You can check this matter with ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/isThreadNamePublic(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.isThreadNamePublic(.init(name: \"Social\")) { threadName, unqiueId, error in",
            "    if let threadName = threadName {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Mute-a-thread",
          "level" : 3,
          "text" : "Mute a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For mute a thread to prevent receive notification use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/muteThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.muteThread(.init(threadId: 123456)) { threadId, unqiueId, error in",
            "    if let threadId = threadId {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Unmute-a-thread",
          "level" : 3,
          "text" : "Unmute a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For unmuteing a thread to receive notification agian use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/unmuteThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.unmuteThread(.init(threadId: 123456)) { threadId, unqiueId, error in",
            "    if let threadId = threadId {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Pin-a-thread",
          "level" : 3,
          "text" : "Pin a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "With pining a thread you could put it at the top of list ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/pinThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.pinThread(.init(threadId: 123456)) { threadId, unqiueId, error in",
            "    if let threadId = threadId {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "UnPin-a-thread",
          "level" : 3,
          "text" : "UnPin a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Unpin a thread that was pinned before ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/pinThread(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.unpinThread(.init(threadId: 123456)) { threadId, unqiueId, error in",
            "    if let threadId = threadId {",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Get-Thread-Participants",
          "level" : 3,
          "text" : "Get Thread Participants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For getting list of participants of a thread use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/getThreadParticipants(_:completion:cacheResponse:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "For getting the list of admins inside a thread just pass ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " for ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadParticipantsRequest\/admin",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " property in this request.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "Chat.sharedInstance.getThreadParticipants(.init(threadId: 123456)) { participants, uniqueId, error in",
            "    if let participants = participants{",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Get-Thread-Admin",
          "level" : 3,
          "text" : "Get Thread Admin",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For getting list of admins of a thread use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/getThreadAdmins(_:completion:cacheResponse:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.getThreadAdmins(.init(threadId: 123456)) { admins, uniqueId, error in",
            "    if let admins = admins{",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Change-Thread-Type",
          "level" : 3,
          "text" : "Change Thread Type",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For changing the type of a thread use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/changeThreadType(_:completion:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "Chat.sharedInstance.changeThreadType(.init(threadId: 123456, type: .CHANNEL)) { admins, uniqueId, error in",
            "    if let admins = admins{",
            "        \/\/ Write your code",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Mutual-groups",
          "level" : 3,
          "text" : "Mutual groups",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For getting the list of threads that are mutuals between the current user and desired user, use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/mutualGroups(_:_:cacheResponse:uniqueIdResult:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let user = Invitee(id: 123456, idType: CONTACT_ID)",
            "Chat.sharedInstance.mutualGroups(.init(toBeUser: user)) { mutualThreads, uniqueId, pagination, error in",
            "    \/\/ Write your code",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/GettingStarted",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingMessages",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingContacts",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingFiles",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingUsers",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingProfile",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingTags",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingBots",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingAssistants",
        "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingMaps"
      ],
      "title" : "Essentials"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fanappodchatsdk\/managingthreads"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK": {
  "abstract" : [
    {
      "text" : "With Fanap Chat SDK you could connect to the chat server without managing the socket state and send or receive messages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FanapPodChatSDK",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/CacheFactory/get(useCache:cacheType:completion:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "get"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "useCache"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheType"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12CacheFactoryC04ReadE4TypeO",
      "text" : "ReadCacheType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK0C8ResponseV",
      "text" : "ChatResponse"
    },
    {
      "kind" : "text",
      "text" : ") -> ())?)"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/CacheFactory\/get(useCache:cacheType:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "get(useCache:cacheType:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/cachefactory\/get(usecache:cachetype:completion:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/addParticipant(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Add participant to a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "addParticipant"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK21AddParticipantRequestC",
      "text" : "AddParticipantRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/addParticipant(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "addParticipant(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/addparticipant(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/changeThreadType(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Change a type of thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "changeThreadType"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK23ChangeThreadTypeRequestC",
      "text" : "ChangeThreadTypeRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/changeThreadType(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "changeThreadType(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/changethreadtype(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/closeThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Close a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "closeThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18CloseThreadRequestC",
      "text" : "CloseThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/closeThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "closeThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/closethread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/createThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Create a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK19CreateThreadRequestC",
      "text" : "CreateThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/createThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "createThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/createthread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/createThreadWithFileMessage(_:textMessage:uploadFile:uploadProgress:onSent:onSeen:onDeliver:createThreadCompletion:uploadUniqueIdResult:messageUniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Create thread and send a file message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createThreadWithFileMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK19CreateThreadRequestC",
      "text" : "CreateThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "textMessage"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK22SendTextMessageRequestC",
      "text" : "SendTextMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "uploadFile"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK17UploadFileRequestC",
      "text" : "UploadFileRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "uploadProgress"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK22UploadFileProgressTypea",
      "text" : "UploadFileProgressType"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "onSent"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK10OnSentTypea",
      "text" : "OnSentType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onSeen"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK10OnSeenTypea",
      "text" : "OnSeenType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onDeliver"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14OnDeliveryTypea",
      "text" : "OnDeliveryType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "createThreadCompletion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">?, "
    },
    {
      "kind" : "externalParam",
      "text" : "uploadUniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "messageUniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/createThreadWithFileMessage(_:textMessage:uploadFile:uploadProgress:onSent:onSeen:onDeliver:createThreadCompletion:uploadUniqueIdResult:messageUniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "createThreadWithFileMessage(_:textMessage:uploadFile:uploadProgress:onSent:onSeen:onDeliver:createThreadCompletion:uploadUniqueIdResult:messageUniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/createthreadwithfilemessage(_:textmessage:uploadfile:uploadprogress:onsent:onseen:ondeliver:createthreadcompletion:uploaduniqueidresult:messageuniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/createThreadWithMessage(_:uniqueIdResult:onSent:onDelivery:onSeen:completion:)": {
  "abstract" : [
    {
      "text" : "Create thread with a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createThreadWithMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK23CreateThreadWithMessageC",
      "text" : "CreateThreadWithMessage"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onSent"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK10OnSentTypea",
      "text" : "OnSentType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onDelivery"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14OnDeliveryTypea",
      "text" : "OnDeliveryType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onSeen"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK10OnSentTypea",
      "text" : "OnSentType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/createThreadWithMessage(_:uniqueIdResult:onSent:onDelivery:onSeen:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "createThreadWithMessage(_:uniqueIdResult:onSent:onDelivery:onSeen:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/createthreadwithmessage(_:uniqueidresult:onsent:ondelivery:onseen:completion:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/deleteThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Delete a thread if you are admin in this thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "deleteThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK19DeleteThreadRequestC",
      "text" : "DeleteThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/deleteThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "deleteThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/deletethread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/getThreadAdmins(_:completion:cacheResponse:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Get thread participants.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "getThreadAdmins"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK25ThreadParticipantsRequestC",
      "text" : "ThreadParticipantsRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK24PaginationCompletionTypea",
      "text" : "PaginationCompletionType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK11ParticipantC",
      "text" : "Participant"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheResponse"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK27PaginationCacheResponseTypea",
      "text" : "PaginationCacheResponseType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK11ParticipantC",
      "text" : "Participant"
    },
    {
      "kind" : "text",
      "text" : "]>?, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/getThreadAdmins(_:completion:cacheResponse:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "getThreadAdmins(_:completion:cacheResponse:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/getthreadadmins(_:completion:cacheresponse:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/getThreadParticipants(_:completion:cacheResponse:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Get thread participants.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "getThreadParticipants"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK25ThreadParticipantsRequestC",
      "text" : "ThreadParticipantsRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK24PaginationCompletionTypea",
      "text" : "PaginationCompletionType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK11ParticipantC",
      "text" : "Participant"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheResponse"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK27PaginationCacheResponseTypea",
      "text" : "PaginationCacheResponseType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK11ParticipantC",
      "text" : "Participant"
    },
    {
      "kind" : "text",
      "text" : "]>?, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/getThreadParticipants(_:completion:cacheResponse:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "getThreadParticipants(_:completion:cacheResponse:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/getthreadparticipants(_:completion:cacheresponse:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/getThreads(_:completion:cacheResponse:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Get list of threads.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "getThreads"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14ThreadsRequestC",
      "text" : "ThreadsRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK24PaginationCompletionTypea",
      "text" : "PaginationCompletionType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheResponse"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK27PaginationCacheResponseTypea",
      "text" : "PaginationCacheResponseType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : "]>?, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/getThreads(_:completion:cacheResponse:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "getThreads(_:completion:cacheResponse:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/getthreads(_:completion:cacheresponse:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/isThreadNamePublic(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Check name for the public thread is not occupied.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isThreadNamePublic"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK25IsThreadNamePublicRequestC",
      "text" : "IsThreadNamePublicRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/isThreadNamePublic(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isThreadNamePublic(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/isthreadnamepublic(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/joinThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Join to a public thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "joinThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK23JoinPublicThreadRequestC",
      "text" : "JoinPublicThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/joinThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "joinThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/jointhread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/leaveThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Leave a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leaveThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18LeaveThreadRequestC",
      "text" : "LeaveThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK4UserC",
      "text" : "User"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/leaveThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leaveThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/leavethread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/leaveThreadSaftly(_:completion:newAdminCompletion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Leave a thrad with replaceing admin.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leaveThreadSaftly"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK22SafeLeaveThreadRequestC",
      "text" : "SafeLeaveThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK4UserC",
      "text" : "User"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "newAdminCompletion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK8UserRoleC",
      "text" : "UserRole"
    },
    {
      "kind" : "text",
      "text" : "]>?, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/leaveThreadSaftly(_:completion:newAdminCompletion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "leaveThreadSaftly(_:completion:newAdminCompletion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/leavethreadsaftly(_:completion:newadmincompletion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/muteThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Mute a thread when a new event happens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "muteThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK23MuteUnmuteThreadRequestC",
      "text" : "MuteUnmuteThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/muteThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "muteThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/mutethread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/mutualGroups(_:_:cacheResponse:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "A list of mutual groups with a user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mutualGroups"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK19MutualGroupsRequestC",
      "text" : "MutualGroupsRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK24PaginationCompletionTypea",
      "text" : "PaginationCompletionType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheResponse"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK27PaginationCacheResponseTypea",
      "text" : "PaginationCacheResponseType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : "]>?, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/mutualGroups(_:_:cacheResponse:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "mutualGroups(_:_:cacheResponse:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/mutualgroups(_:_:cacheresponse:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/pinThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Pin a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pinThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK21PinUnpinThreadRequestC",
      "text" : "PinUnpinThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/pinThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pinThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/pinthread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/removeParticipants(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Remove participants from a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeParticipants"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK25RemoveParticipantsRequestC",
      "text" : "RemoveParticipantsRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK11ParticipantC",
      "text" : "Participant"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/removeParticipants(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeParticipants(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/removeparticipants(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/spamPvThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "Mark a thread as an spam",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "spamPvThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK17SpamThreadRequestC",
      "text" : "SpamThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14BlockedContactC",
      "text" : "BlockedContact"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/spamPvThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "spamPvThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/spampvthread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/unmuteThread(_:completion:uniqueIdResult:)": {
  "abstract" : [
    {
      "text" : "UNMute a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unmuteThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK23MuteUnmuteThreadRequestC",
      "text" : "MuteUnmuteThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/unmuteThread(_:completion:uniqueIdResult:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unmuteThread(_:completion:uniqueIdResult:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/unmutethread(_:completion:uniqueidresult:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Chat/updateThreadInfo(_:uniqueIdResult:uploadProgress:completion:)": {
  "abstract" : [
    {
      "text" : "Update details of a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateThreadInfo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK23UpdateThreadInfoRequestC",
      "text" : "UpdateThreadInfoRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueIdResult"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK18UniqueIdResultTypea",
      "text" : "UniqueIdResultType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "uploadProgress"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK22UploadFileProgressTypea",
      "text" : "UploadFileProgressType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK14CompletionTypea",
      "text" : "CompletionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK12ConversationC",
      "text" : "Conversation"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Chat\/updateThreadInfo(_:uniqueIdResult:uploadProgress:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "updateThreadInfo(_:uniqueIdResult:uploadProgress:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/chat\/updatethreadinfo(_:uniqueidresult:uploadprogress:completion:)"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Conversation/id": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Conversation\/id",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "id",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/conversation\/id"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Conversation/type": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "type"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15FanapPodChatSDK11ThreadTypesO",
      "text" : "ThreadTypes"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Conversation\/type",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "type",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/conversation\/type"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/CreateThreadRequest": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CreateThreadRequest"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/CreateThreadRequest",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CreateThreadRequest"
    }
  ],
  "role" : "symbol",
  "title" : "CreateThreadRequest",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/createthreadrequest"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/GettingStarted": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/GettingStarted",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Getting Started",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/gettingstarted"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/LeaveThreadRequest/clearHistory": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "clearHistory"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/LeaveThreadRequest\/clearHistory",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "clearHistory",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/leavethreadrequest\/clearhistory"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingAssistants": {
  "abstract" : [
    {
      "text" : "Adding a participant as an assistant.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingAssistants",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Assistants",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingassistants"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingBots": {
  "abstract" : [
    {
      "text" : "For creating, add\/remove command, user bots, start\/stop.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingBots",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Bots",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingbots"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingContacts": {
  "abstract" : [
    {
      "text" : "Managing contacts add, edit, delete, search, and more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingContacts",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Contacts",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingcontacts"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingFiles": {
  "abstract" : [
    {
      "text" : "You could manage download and upload and so more in terms of working with files.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingFiles",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Files",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingfiles"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingMaps": {
  "abstract" : [
    {
      "text" : "Converting lat, long to an address or searching through a map, or finding a route getting an image of lat, long.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingMaps",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Maps",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingmaps"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingMessages": {
  "abstract" : [
    {
      "text" : "You could Add, delete, edit, reply, forward and so many more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingMessages",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Messages",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingmessages"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingProfile": {
  "abstract" : [
    {
      "text" : "Get current user details, update, set profile.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingProfile",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Profile",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingprofile"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingTags": {
  "abstract" : [
    {
      "text" : "Tags are like folder for managing threads. You could Add, delete, edit and add\/remove tag participans.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingTags",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Tags",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingtags"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ManagingUsers": {
  "abstract" : [
    {
      "text" : "Manage users such as get a list of roles and so more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ManagingUsers",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Users",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/managingusers"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/Roles/OWNERSHIP": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OWNERSHIP"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/Roles\/OWNERSHIP",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "Roles.OWNERSHIP",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/roles\/ownership"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ThreadParticipantsRequest/admin": {
  "abstract" : [
    {
      "text" : "If it set to true the request only contains the list of admins of a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "admin"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadParticipantsRequest\/admin",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "admin",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/threadparticipantsrequest\/admin"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ThreadTypes/CHANNEL": {
  "abstract" : [
    {
      "text" : "Private Channel - Only the admin can send an invitation to someone to join this thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CHANNEL"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/CHANNEL",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ThreadTypes.CHANNEL",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/threadtypes\/channel"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ThreadTypes/CHANNEL_GROUP": {
  "abstract" : [
    {
      "text" : "Private Channel only admin can send invitation to some one to join this thread.and Every one can send message to this thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CHANNEL_GROUP"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/CHANNEL_GROUP",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ThreadTypes.CHANNEL_GROUP",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/threadtypes\/channel_group"
},
"doc://FanapPodChatSDK/documentation/FanapPodChatSDK/ThreadTypes/NORMAL": {
  "abstract" : [
    {
      "text" : "This type can be P2P only 2 user or can be a Private group.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NORMAL"
    }
  ],
  "identifier" : "doc:\/\/FanapPodChatSDK\/documentation\/FanapPodChatSDK\/ThreadTypes\/NORMAL",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ThreadTypes.NORMAL",
  "type" : "topic",
  "url" : "\/documentation\/fanappodchatsdk\/threadtypes\/normal"
}
}
}